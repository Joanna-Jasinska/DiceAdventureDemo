{"version":3,"file":"static/js/161.291dc87f.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/DiceIcon/DiceIcon.module.css?7f0e","components/DiceIcon/DiceIcon.js","webpack://DiceAdventureDemo/./src/components/DungeonSquare/DungeonSquare.module.css?79c2","components/DungeonSquare/DungeonSquare.jsx","webpack://DiceAdventureDemo/./src/components/Miniature/Miniature.module.css?652d","components/Miniature/Miniature.jsx","pages/SummaryPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"DiceIcon_dice__mzHqX\",\"icon\":\"DiceIcon_icon__Rr08e\",\"physical\":\"DiceIcon_physical__yV2lY\",\"magic\":\"DiceIcon_magic__15Bfj\",\"elemental\":\"DiceIcon_elemental__B0alV\",\"trait\":\"DiceIcon_trait__fPQ3I\",\"any\":\"DiceIcon_any__f-UYu\",\"notRolled\":\"DiceIcon_notRolled__oeujV\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./DiceIcon.module.css\";\n\nconst getFrame = ({ value, type }) => {\n  const style = value === undefined || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"trait\":\n      return `${style}${css.trait}`;\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const DiceIcon = ({ value, diceMax, type }) => {\n  return (\n    <div className={`${css.dice} ${getFrame({ value, type })}`}>\n      {value || diceMax || \" \"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DungeonSquare_item__qIj3c\",\"bar\":\"DungeonSquare_bar__zX7ka\",\"iconBag\":\"DungeonSquare_iconBag__JG6Zg\",\"button\":\"DungeonSquare_button__1IOgw\",\"selected\":\"DungeonSquare_selected__24Thy\",\"text\":\"DungeonSquare_text__iDjwK\",\"level\":\"DungeonSquare_level__Auzzp\",\"name\":\"DungeonSquare_name__9UrAj\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport css from \"./DungeonSquare.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectDungeon } from \"redux/game/operations\";\nimport { getDiceTypeIcon } from \"data/icons\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\n\nexport const DungeonSquare = ({\n  name,\n  eventName,\n  id,\n  selected = false,\n  background,\n  lv = -1,\n  weakness = false,\n  // eventId,\n  // lvStarted,\n  // lvReached,\n  // gold,\n  // ally,\n}) => {\n  const dispatch = useDispatch();\n  const { bgColor, icon, eventIcon } = background;\n  const weaknessTypes = weakness && weakness !== undefined ? weakness : false;\n\n  const selectSelf = () => {\n    if (!selected) {\n      dispatch(setSelectDungeon(id));\n    }\n  };\n  return (\n    <div className={css.item} id={id}>\n      <Miniature\n        // url={icon}\n        alt={name}\n        bgTxtFront={eventIcon}\n        bgTxtBack={icon}\n        bgColor={bgColor}\n        // lv={lvReached}\n      />\n      <div className={css.bar}>\n        {selected === \"hide\" ? (\n          \"\"\n        ) : (\n          <button\n            key={`${name}btn${id}`}\n            className={`${css.button} ${selected ? css.selected : \"\"} ${\n              css.delete\n            }`}\n            type=\"button\"\n            onClick={selectSelf}\n          >\n            {selected ? getDiceTypeIcon(\"playerAttack\") : \"ðŸ ˜\"}\n          </button>\n        )}\n        <span className={css.text}>\n          <span className={css.level}>{`${lv} `}</span>\n          <span className={css.name}>{`${name} ${eventName}`}</span>\n        </span>\n      </div>\n      <div className={css.iconBag}>\n        {weaknessTypes\n          ? weaknessTypes.map((w, index) => (\n              <DiceIcon type={w} key={`dungeonWeakness|${id}|${index}`} />\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"miniature\":\"Miniature_miniature__-XChZ\",\"extension\":\"Miniature_extension__JEJLA\",\"padding\":\"Miniature_padding__AvpVc\",\"textBoxContainer\":\"Miniature_textBoxContainer__VBOAB\",\"textBoxFront\":\"Miniature_textBoxFront__YIyfd\",\"textBoxBack\":\"Miniature_textBoxBack__b4yIz\",\"imgFrame\":\"Miniature_imgFrame__3V+X9\",\"figcaption\":\"Miniature_figcaption__PifSq\",\"img\":\"Miniature_img__7uR5g\"};","import { PropTypes } from \"prop-types\";\nimport css from \"./Miniature.module.css\";\n\nexport const Miniature = ({\n  // url,\n  // alt = \"ðŸ˜Ž\",\n  // title,\n  padding = false,\n  bgTxtFront = \"\",\n  bgTxtBack = \"\",\n  children,\n  bgColor = \"#d7ca92\",\n}) => {\n  return (\n    <figure className={`${css.miniature} ${children ? css.extended : \"\"}`}>\n      <div\n        className={`${css.imgFrame} ${padding ? css.padding : \"\"} `}\n        style={{ backgroundColor: `${bgColor}` }}\n      >\n        {/* {url && url !== \"\" ? (\n          <img className={css.img} src={url} alt={`\\n${alt}`} />\n        ) : ( */}\n        <div className={css.textBoxContainer}>\n          <div className={css.textBoxBack}>{bgTxtBack}</div>\n          <div className={css.textBoxFront}>{bgTxtFront}</div>\n        </div>\n        {/* )} */}\n      </div>\n      {children ? <div className={css.extension}> {children}</div> : \"\"}\n    </figure>\n  );\n};\nMiniature.propTypes = {\n  bgTxtFront: PropTypes.string,\n  bgTxtBack: PropTypes.string,\n  bgColor: PropTypes.string,\n  padding: PropTypes.bool,\n  // title: PropTypes.object,\n};\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { Title } from \"components/Title/Title\";\nimport { useCombat, useDungeon } from \"hooks\";\nimport { PlayerAvatar } from \"components/PlayerAvatar/PlayerAvatar\";\nimport { BagOfGold } from \"components/BagOfGold/BagOfGold\";\nimport { LevelUps } from \"components/LevelUps/LevelUps\";\nimport { enterSummary } from \"redux/combat/operations\";\nimport { useGame } from \"hooks/useGame\";\nimport { DungeonSquare } from \"components/DungeonSquare/DungeonSquare\";\nimport css from \"./Page.module.css\";\n\nexport const SummaryPage = () => {\n  const dispatch = useDispatch();\n  const { inCombat } = useCombat();\n  const { error, goldEarned, name, eventName, bg, lv, startedLv } =\n    useDungeon();\n  const { selectedDungeonId } = useGame();\n  const levelUps = Math.max((lv || 0) - (startedLv || 0), 0);\n\n  useEffect(() => {\n    if (inCombat !== \"summary\") dispatch(enterSummary());\n  }, [dispatch, inCombat]);\n\n  return (\n    <>\n      {!inCombat ? (\n        <Navigate to=\"/quickBattle\" />\n      ) : (\n        <main className={`${css.main} ${css.center}`}>\n          {error ? <span className={css.error}>{error}</span> : \"\"}\n          <Title title={`Summary`} />\n          <div className={`${css.wrap}`}>\n            <DungeonSquare\n              {...{\n                name,\n                eventName,\n                id: selectedDungeonId,\n                lv,\n                background: bg,\n                selected: \"hide\",\n              }}\n            />\n            <PlayerAvatar />\n            <BagOfGold gold={goldEarned} />\n            <LevelUps lv={levelUps} />\n          </div>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default SummaryPage;\n"],"names":["getFrame","value","type","style","undefined","css","DiceIcon","diceMax","className","getDiceTypeIcon","DungeonSquare","name","eventName","id","selected","background","lv","weakness","dispatch","useDispatch","bgColor","icon","eventIcon","weaknessTypes","Miniature","alt","bgTxtFront","bgTxtBack","onClick","setSelectDungeon","map","w","index","padding","children","backgroundColor","SummaryPage","inCombat","useCombat","useDungeon","error","goldEarned","bg","startedLv","selectedDungeonId","useGame","levelUps","Math","max","useEffect","enterSummary","title","gold","to"],"sourceRoot":""}