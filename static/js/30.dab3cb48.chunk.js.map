{"version":3,"file":"static/js/30.dab3cb48.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/DiceIcon/DiceIcon.module.css?7f0e","components/DiceIcon/DiceIcon.js","objects/Actions.js","components/EnemyBody/EnemyPiece/EnemyPiece.js","webpack://DiceAdventureDemo/./src/components/EnemyBody/EnemyPiece/PieceIcon/PieceIcon.module.css?302a","components/EnemyBody/EnemyPiece/PieceIcon/PieceIcon.js","webpack://DiceAdventureDemo/./src/components/Miniature/Miniature.module.css?652d","components/Miniature/Miniature.jsx","webpack://DiceAdventureDemo/./src/components/SkillList/SkillList.module.css?e556","components/SkillList/SkillList.jsx","webpack://DiceAdventureDemo/./src/components/SkillSquare/SkillSquare.module.css?bc81","components/SkillSquare/SkillSquare.jsx","data/skillEvaluation/skillEvaluation.js","objects/Skill.js","data/skillsExecution/skillExecution.js","components/EnemyBody/EnemyBody.js","webpack://DiceAdventureDemo/./src/components/RolledDice/RolledDice.module.css?f511","components/RolledDice/RolledDice.js","webpack://DiceAdventureDemo/./src/components/RolledDiceBag/RolledDiceBag.module.css?655e","components/RolledDiceBag/RolledDiceBag.js","pages/CombatPage.js","webpack://DiceAdventureDemo/./src/components/EnemyBody/EnemyBody.module.css?0d90"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"DiceIcon_dice__mzHqX\",\"icon\":\"DiceIcon_icon__Rr08e\",\"physical\":\"DiceIcon_physical__yV2lY\",\"magic\":\"DiceIcon_magic__15Bfj\",\"elemental\":\"DiceIcon_elemental__B0alV\",\"trait\":\"DiceIcon_trait__fPQ3I\",\"any\":\"DiceIcon_any__f-UYu\",\"notRolled\":\"DiceIcon_notRolled__oeujV\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./DiceIcon.module.css\";\n\nconst getFrame = ({ value, type }) => {\n  const style = value === undefined || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"trait\":\n      return `${style}${css.trait}`;\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const DiceIcon = ({ value, diceMax, type }) => {\n  return (\n    <div className={`${css.dice} ${getFrame({ value, type })}`}>\n      {value || diceMax || \" \"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","import {\n  deleteAllPieceDices,\n  placeBodyPieceDice,\n} from \"redux/enemy/operations\";\nimport { Piece } from \"./Piece\";\nimport {\n  addMultipleRolledDice,\n  deleteRolledDice,\n} from \"redux/combat/operations\";\n\nexport const Actions = {\n  // -----------------------------------------------------------------------------\n  clickOnBodyPiece(piecee, rolledDices) {\n    const piece = JSON.parse(JSON.stringify(piecee));\n    // console.log(`clickOnBodyPiece`);\n    const toDispatch = [];\n    const foundRD = rolledDices;\n    const bag =\n      foundRD && Array.isArray(foundRD) && foundRD.length > 0 ? foundRD : false;\n    const foundSD = !!foundRD ? foundRD.filter((dice) => dice.selected) : false;\n    const selectedDices =\n      foundSD && Array.isArray(foundSD) && foundSD.length > 0 ? foundSD : false;\n    const pieceDices =\n      piece.dices && Array.isArray(piece.dices) && piece.dices.length > 0\n        ? piece.dices\n        : false;\n\n    const returnAllPieceDicesToBag = () => {\n      // console.log(`Returning all piece dices to bag`);\n      let diceArray = [];\n      piece.dices.forEach((d) => {\n        diceArray.push(d);\n      });\n      if (diceArray.length > 0) {\n        toDispatch.push(() => addMultipleRolledDice(diceArray));\n        toDispatch.push(() => deleteAllPieceDices(piece.id));\n        // console.log(`Actions.returnAllPieceDicesToBag, piece.id: `, piece.id);\n        // console.log(\n        //   `Actions.returnAllPieceDicesToBag, dispatched: `,\n        //   toDispatch\n        // );\n        return toDispatch;\n      }\n    };\n    // !!!AAA!!! find out if piece can fill any more dices by piece.allows.maxDices\n    if (pieceDices && (piece.disabled || piece.fulfilled)) {\n      returnAllPieceDicesToBag();\n      return toDispatch;\n    }\n    const findFirstAllowedDice = (piece, diceArray) => {\n      let firstAllowedDice = false;\n      for (let i = diceArray.length; i > 0; i--) {\n        const thisDice = diceArray[i - 1];\n        if (Piece.diceIsAllowed(piece, thisDice)) {\n          firstAllowedDice = { ...thisDice };\n          i = 0;\n        }\n      }\n      return firstAllowedDice;\n    };\n    if (bag) {\n      if (selectedDices) {\n        const firstAllowedDice = findFirstAllowedDice(piece, selectedDices);\n        if (firstAllowedDice) {\n          toDispatch.push(() =>\n            placeBodyPieceDice({ pieceId: piece.id, dice: firstAllowedDice })\n          );\n          toDispatch.push(() => deleteRolledDice(firstAllowedDice));\n          console.log(`Added ${firstAllowedDice.id} to ${piece.id}`);\n          return toDispatch;\n        } else {\n          // have selected dices but none of them can be placed in\n          // for now do nothing !!!OPTION!!!\n          return toDispatch;\n        }\n      }\n\n      ////// have [NO] selected dices\n      const firstAllowedDice = findFirstAllowedDice(piece, bag);\n      if (firstAllowedDice) {\n        toDispatch.push(() =>\n          placeBodyPieceDice({ pieceId: piece.id, dice: firstAllowedDice })\n        );\n        toDispatch.push(() => deleteRolledDice(firstAllowedDice));\n        console.log(`Added ${firstAllowedDice.id} to ${piece.id}`);\n        return toDispatch;\n      } else {\n        returnAllPieceDicesToBag();\n        return toDispatch;\n      }\n    }\n\n    if (pieceDices) {\n      returnAllPieceDicesToBag();\n      return toDispatch;\n    }\n\n    return [];\n  },\n  // -----------------------------------------------------------------------------\n};\n","import { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport css from \"./../EnemyBody.module.css\";\nimport { Actions } from \"objects/Actions\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useCombat } from \"hooks\";\nimport { Piece } from \"objects/Piece\";\nimport { PieceIcon } from \"./PieceIcon/PieceIcon\";\n\nexport const EnemyPiece = ({ p }) => {\n  const dispatch = useDispatch();\n  const { rolledDices } = useCombat();\n  const [toDispatch, editToDispatch] = useState([]);\n  const damageIcons = Piece.getDmgIcons(p);\n  const requiredIcons = Piece.getReqIcons(p);\n  // const allowedTypes = p.allows ? (p.allows.types ? p.allows.types : []) : [];\n  const weaknessTypes = p.weakness ? p.weakness : [];\n\n  const onDiceHolderClick = () => {\n    editToDispatch([\n      ...toDispatch.concat(Actions.clickOnBodyPiece(p, rolledDices)),\n    ]);\n    // ;\n  };\n\n  useEffect(() => {\n    const runDispatch = async () => {\n      for (const dispatchFunc of toDispatch) {\n        await dispatch(dispatchFunc());\n      }\n      editToDispatch([]);\n    };\n\n    if (toDispatch.length > 0) {\n      runDispatch();\n    }\n  }, [toDispatch, dispatch]);\n\n  return (\n    <div\n      className={`${css.piece} ${\n        p.fulfilled ? css.fulfilled : p.disabled ? css.disabled : css.waiting\n      }`}\n    >\n      <div className={css.leftHolder}>\n        {!weaknessTypes\n          ? \"\"\n          : weaknessTypes.map((type, index) =>\n              type === \"any\" ? (\n                \"\"\n              ) : (\n                <DiceIcon\n                  type={type}\n                  value={``}\n                  key={`weaknessDiceType|${p.id}|${type}${index}`}\n                />\n              )\n            )}\n        {/* {!allowedTypes\n          ? \"\"\n          : allowedTypes.map((type, index) =>\n              type === \"any\" ? (\n                \"\"\n              ) : (\n                <DiceIcon\n                  type={type}\n                  value={``}\n                  key={`allowedDiceType|${p.id}|${type}${index}`}\n                  // onClick={() => console.log(`[${type}]`)}\n                />\n              )\n            )} */}\n      </div>\n\n      <div className={css.middleContainer} onClick={onDiceHolderClick}>\n        <div className={css.displayedBodyPart}>{p.bodyPartIcon}</div>\n        <div className={css.diceHolder}>\n          {p.dices\n            ? p.dices.map((dice, index) => (\n                <DiceIcon {...dice} key={`pieceDice|${dice.type}|${index}`} />\n              ))\n            : \"\"}\n        </div>\n        <div className={css.requiredHolder}>\n          <div className={css.req}></div>\n          {requiredIcons\n            ? requiredIcons.map((i, index) => (\n                <PieceIcon {...i} key={`pieceIcon|${p.id}|${index}`} />\n              ))\n            : \"\"}\n        </div>\n      </div>\n      <div className={css.damageHolder}>\n        {damageIcons\n          ? damageIcons.map((i, index) => (\n              <div className={css.dmg} key={`${p.id}|dmgIcon|${index}`}>\n                {i}\n              </div>\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"PieceIcon_dice__ZzvQe\",\"icon\":\"PieceIcon_icon__g4BoE\",\"allowed\":\"PieceIcon_allowed__OR7Se\",\"glowing\":\"PieceIcon_glowing__h3PK-\",\"neutral\":\"PieceIcon_neutral__gwSdE\",\"required\":\"PieceIcon_required__vrTY5\"};","import css from \"./PieceIcon.module.css\";\n\nconst getColor = ({ required, allowed }) => {\n  if (required) return css.required;\n  if (allowed) return css.allowed;\n  return css.neutral;\n};\n\nexport const PieceIcon = ({ value, required, allowed }) => {\n  return (\n    <div className={`${css.dice} ${getColor({ required, allowed })}`}>\n      {`${value || \" \"}`}\n      <span className={css.icon}> </span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"miniature\":\"Miniature_miniature__-XChZ\",\"extended\":\"Miniature_extended__Mo3l9\",\"extension\":\"Miniature_extension__JEJLA\",\"padding\":\"Miniature_padding__AvpVc\",\"textBoxContainer\":\"Miniature_textBoxContainer__VBOAB\",\"textBoxFront\":\"Miniature_textBoxFront__YIyfd\",\"textBoxBack\":\"Miniature_textBoxBack__b4yIz\",\"imgFrame\":\"Miniature_imgFrame__3V+X9\",\"figcaption\":\"Miniature_figcaption__PifSq\",\"img\":\"Miniature_img__7uR5g\"};","import { PropTypes } from \"prop-types\";\nimport css from \"./Miniature.module.css\";\n\nexport const Miniature = ({\n  // url,\n  // alt = \"😎\",\n  // title,\n  padding = false,\n  bgTxtFront = \"\",\n  bgTxtBack = \"\",\n  children,\n  bgColor = \"#d7ca92\",\n}) => {\n  return (\n    <figure className={`${css.miniature} ${children ? css.extended : \"\"}`}>\n      <div\n        className={`${css.imgFrame} ${padding ? css.padding : \"\"} `}\n        style={{ backgroundColor: `${bgColor}` }}\n      >\n        {/* {url && url !== \"\" ? (\n          <img className={css.img} src={url} alt={`\\n${alt}`} />\n        ) : ( */}\n        <div className={css.textBoxContainer}>\n          <div className={css.textBoxBack}>{bgTxtBack}</div>\n          <div className={css.textBoxFront}>{bgTxtFront}</div>\n        </div>\n        {/* )} */}\n      </div>\n      {children ? <div className={css.extension}> {children}</div> : \"\"}\n    </figure>\n  );\n};\nMiniature.propTypes = {\n  bgTxtFront: PropTypes.string,\n  bgTxtBack: PropTypes.string,\n  bgColor: PropTypes.string,\n  padding: PropTypes.bool,\n  // title: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SkillList_list__0NNv7\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectLoading, selectFilters } from \"redux/eq/selectors\";\nimport { SkillSquare } from \"components/SkillSquare/SkillSquare\";\nimport { updateItem } from \"redux/eq/operations\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { selectPackedItems } from \"redux/dungeon/selectors\";\nimport { useCombat, useDungeon } from \"hooks\";\nimport { Skill } from \"objects/Skill\";\nimport css from \"./SkillList.module.css\";\n\nexport const SkillList = ({ filters }) => {\n  const extraFilters = useSelector(selectFilters);\n  const { dungeon } = useDungeon();\n\n  const dispatch = useDispatch();\n  const items = useSelector(selectPackedItems);\n\n  const filterItems = (filters, items) => {\n    const filteredItems = items\n      ? Array.isArray(items)\n        ? [\n            ...items.filter((i) => {\n              return !filters.selected || i.selected === filters.selected;\n            }),\n          ]\n        : items\n      : items;\n    return filteredItems;\n  };\n  const { combat } = useCombat();\n\n  return (\n    <div className={css.list}>\n      {useSelector(selectLoading) ? (\n        <>\n          <Loader />\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {/* <Item {...items.all[0]} /> */}\n      {/* filters || extraFilters */}\n      {items\n        ? Array.isArray(items)\n          ? filterItems(filters || extraFilters, items).map((el, index) => {\n              return (\n                <SkillSquare\n                  name={`${el.name}`}\n                  alt={`${el.alt}`}\n                  itemId={`${el.itemId}`}\n                  key={`${el.name}|${el.index}|${el.id}`}\n                  // key={`key|${index}`}\n                  index={index}\n                  selected={el.selected}\n                  skill={el.skill}\n                  currentUses={el.currentUses}\n                  success={Skill.usedDices(el.itemId, { combat, dungeon })}\n                  statsTxT={el.statsTxT || \"\"}\n                  toggleSelect={() =>\n                    dispatch(\n                      updateItem({\n                        ...el,\n                        selected: !el.selected,\n                      })\n                    )\n                  }\n                  dices={el.dices}\n                  lv={el.lv}\n                />\n              );\n            })\n          : \"\"\n        : \"\"}\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SkillSquare_item__bxD12\",\"canFire\":\"SkillSquare_canFire__YwXx-\",\"skillButton\":\"SkillSquare_skillButton__6sBaz\",\"bar\":\"SkillSquare_bar__HFaeU\",\"text\":\"SkillSquare_text__k4BJE\",\"name\":\"SkillSquare_name__thDuJ\",\"iconBag\":\"SkillSquare_iconBag__c+K-+\",\"disabled\":\"SkillSquare_disabled__L5kRC\",\"spent\":\"SkillSquare_spent__cyghQ\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport css from \"./SkillSquare.module.css\";\nimport { useCombat } from \"hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Skill } from \"objects/Skill\";\n\nexport const SkillSquare = ({\n  name,\n  itemId,\n  icon,\n  alt,\n  tags = [\"\"],\n  // lv = 1,\n  // selected = false,\n  // toggleSelect,\n  // dices,\n  success = false,\n  currentUses = -1,\n  // stats = [],\n  skill = {\n    name: \"NO SKILL\",\n    txt: \"-\",\n    id: \"skill|id\",\n    displayCost: [],\n  },\n  // statsTxT,\n}) => {\n  const [toDispatch, editToDispatch] = useState([]);\n  const { inCombat, combat } = useCombat();\n  const dispatch = useDispatch();\n\n  const fireSkill = () => {\n    if (success && toDispatch.length === 0) {\n      // console.log(`--------FIRING SKILL - ADDING TO DISPATCH--------`);\n      editToDispatch([\n        ...toDispatch.concat(Skill.execute(itemId, { combat }, success)),\n      ]);\n      // editToDispatch((prevToDispatch) => [\n      //   ...prevToDispatch,\n      //   Skill.execute(skill.id, { combat }, success),\n      // ]);\n    }\n  };\n\n  useEffect(() => {\n    const runDispatch = async (toDispatch) => {\n      for (const dispatchFunc of toDispatch) {\n        if (dispatchFunc !== false) {\n          await dispatch(dispatchFunc());\n        }\n      }\n      editToDispatch([]);\n    };\n\n    if (toDispatch.length > 0) {\n      runDispatch(toDispatch);\n    }\n  }, [toDispatch, dispatch]);\n\n  return (\n    <div\n      className={`${css.item} ${\n        inCombat !== true || currentUses < 0\n          ? css.display\n          : success\n          ? css.canFire\n          : css.disabled\n      } ${inCombat === true && currentUses === 0 ? css.spent : \"\"}`}\n      id={itemId}\n    >\n      <Miniature url={icon} alt={alt || name} bgTxtBack={tags[0]} />\n      <div\n        key={`${name}btn${itemId}`}\n        className={`${css.skillButton} `}\n        onClick={fireSkill}\n      >\n        {alt}\n      </div>\n      <div className={css.bar}>\n        <div className={css.iconBag}>\n          {(skill.displayCost ? skill.displayCost : []).map((el, index) => {\n            return <DiceIcon {...el} key={`${name}|${el.type}|${index}`} />;\n          })}\n        </div>\n\n        <div className={css.text}>{skill.txt}</div>\n        <span className={css.name}>{skill.name}</span>\n      </div>\n    </div>\n  );\n};\n","import { getSkillEvalById } from \"data/eq\";\n// import { SKILL_EVALUATION } from \"../skillEvaluations\";\n// import { getSkillById } from \"../skills\";\n\nconst fetchSkillEvaluation = (id, state) => {\n  // returns array of functions\n  if (!id) return [];\n  const found = getSkillEvalById(id) || [];\n  // const found = SKILL_EVALUATION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((evaluation) => {\n      const collection = evaluation[0] || { false: () => false };\n      const evaId = evaluation.length > 0 ? evaluation[1] || false : false;\n      const params = evaluation.length > 1 ? evaluation[2] || {} : {};\n      const func = () => collection[evaId]({ params, state });\n      // console.log(\n      //   `Adding eval func collection[${evaId}](${params})`,\n      //   evaluation\n      // );\n      return func;\n    }),\n  ];\n  return sequence;\n};\n\nexport const fetchSkillEvaluations = ({ itemId, state }) => {\n  // returns false or array of functions to evaluate\n  // const { evaluationId } = getSkillById(skillId);\n  // const sequence = fetchSkillEvaluation(evaluationId, state);\n  const sequence = fetchSkillEvaluation(itemId, state);\n  if (sequence.length < 1) return false;\n  console.log(`Skill evaluations for:`, itemId, sequence);\n  return sequence;\n};\n","import { fetchSkillEvaluations } from \"data/skillEvaluation/skillEvaluation\";\nimport { fetchSkillExecution } from \"data/skillsExecution/skillExecution\";\nimport { deleteAllSelectedDices } from \"redux/combat/operations\";\nimport { useDungeonItemSkill } from \"redux/dungeon/operations\";\nconst getDiceFromId = (id, dices) => {\n  const found = dices.find((dice) => dice.id === id);\n  return found || {};\n};\n\nexport const Skill = {\n  usedDices(itemId, state) {\n    // returns false or array of dice ids\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    const dungeon = state.dungeon || false;\n    const items = dungeon ? dungeon.items || false : false;\n    const thisItem = items ? items.find((i) => i.itemId === itemId) : false;\n    const currentUses = thisItem ? thisItem.currentUses || 0 : 0;\n    if (currentUses < 1) return false;\n    const arrayToTest = fetchSkillEvaluations({\n      itemId,\n      state,\n    });\n    // let result;\n    if (!arrayToTest) {\n      console.log(`${itemId} had no evaluations to perform`);\n      return false;\n    }\n    const arr = [...arrayToTest];\n    // let txt = \"\";\n    let success = true;\n    let i = 0;\n    while (success && i < arr.length) {\n      const singleResult = arr[i]();\n      if (singleResult === undefined || singleResult === false) {\n        success = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (success !== true && success !== false) {\n            success = [...success, ...singleResult];\n          } else {\n            success = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) success = false;\n    // result = { success, txt: txt };\n    // if(success)console.log(txt);\n    return success;\n  },\n  execute(itemId, state, diceIdArr) {\n    // returns false or array of func to dispatch\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    // !!!AAA!!! make fun that will pull dice from selected by the id\n    // console.log(`Skill.EXECUTE > diceIdArr`, diceIdArr);\n    const usedDices = [\n      ...diceIdArr.map((id) => {\n        return getDiceFromId(id, state.combat.rolledDices);\n      }),\n    ];\n    console.log(`Skill.EXECUTE > usedDices, diceIdArr`, usedDices, diceIdArr);\n    const arrayToExecute = fetchSkillExecution({\n      itemId,\n      state,\n      usedDices,\n    });\n    // let result;\n    if (!arrayToExecute) {\n      console.log(`${itemId} had no actions to execute`);\n      return false;\n    }\n    const arr = [...arrayToExecute];\n    // let txt = \"\";\n    let funcList = true;\n    // let funcList = [() => deleteAllSelectedDices()];\n    let i = 0;\n    // console.log(`----------Skill.execute [--------------------`);\n    while (funcList && i < arr.length) {\n      const singleResult = arr[i]();\n      // console.log(`------- while  executing func-----------`, arr[i]);\n      // console.log(\n      //   `------- while  singleResult.length[${singleResult.length}]-----------`,\n      //   singleResult\n      // );\n      if (singleResult === undefined || singleResult === false) {\n        funcList = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (funcList !== true && funcList !== false) {\n            funcList = [...funcList, ...singleResult];\n          } else {\n            funcList = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n\n    // console.log(`----------] Skill.execute--------------------`);\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) {\n      funcList = false;\n    } else {\n      if (funcList !== true && funcList !== false) {\n        funcList = [\n          ...funcList,\n          deleteAllSelectedDices,\n          () => useDungeonItemSkill(itemId),\n        ];\n      } else {\n        funcList = [deleteAllSelectedDices, () => useDungeonItemSkill(itemId)];\n      }\n    }\n    // result = { funcList, txt: txt };\n    // if(funcList)console.log(txt);\n    return funcList;\n  },\n};\n","// import { SKILL_EXECUTION } from \"data/skillExecutions\";\n// import { getSkillById } from \"../skills\";\nimport { getSkillExecById } from \"data/eq\";\n\nexport const fetchSkillExecution = ({ itemId, state, usedDices }) => {\n  // returns array of functions\n  // const id = getSkillById(skillId).actionId;\n  if (!itemId) return [];\n  const found = getSkillExecById(itemId) || [];\n  // const found = SKILL_EXECUTION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((exec) => {\n      const collection = exec[0] || { false: () => false };\n      const exeId = exec.length > 0 ? exec[1] || false : false;\n      const params = exec.length > 1 ? exec[2] || {} : {};\n      const func = () => collection[exeId]({ params, state, usedDices });\n      //   console.log(\n      //     `Adding eval func collection[${evaId}](${params})`,\n      //     exec\n      //   );\n      return func;\n    }),\n  ];\n  if (sequence.length < 1) return false;\n  console.log(`data> skillExecs > SkillExecs for:`, itemId, sequence);\n  return sequence;\n};\n","import { EnemyPiece } from \"./EnemyPiece/EnemyPiece\";\nimport css from \"./EnemyBody.module.css\";\nimport { useEnemy } from \"hooks/useEnemy\";\n\nexport const EnemyBody = () => {\n  const { body } = useEnemy();\n  const bodyTemplate = [];\n  const myBody = body ? body : bodyTemplate;\n  return (\n    <div className={css.body}>\n      {myBody.map((piece, index) => (\n        <EnemyPiece p={{ ...piece }} key={`piece|${index}|${piece.id}`} />\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"RolledDice_dice__Xm1fU\",\"removing\":\"RolledDice_removing__Si4LS\",\"appearing\":\"RolledDice_appearing__Regnw\",\"diceMaxCover\":\"RolledDice_diceMaxCover__W6mKr\",\"icon\":\"RolledDice_icon__8Q1v9\",\"physical\":\"RolledDice_physical__P4A2k\",\"magic\":\"RolledDice_magic__X8wHj\",\"elemental\":\"RolledDice_elemental__TF1bg\",\"trait\":\"RolledDice_trait__A5TtY\",\"any\":\"RolledDice_any__UQyUn\",\"notRolled\":\"RolledDice_notRolled__M8zvO\",\"selected\":\"RolledDice_selected__yikHW\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./RolledDice.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDiceSelection } from \"redux/combat/operations\";\n\n// const getColor = ({ value, diceMax = 6 }) => {\n//   //   console.log(`getting color ${value} / ${diceMax}`);\n//   if (!value || value === -1) return css.random;\n//   const percentage = (100 * value) / diceMax;\n//   if (percentage > 90) return css.full;\n//   if (percentage > 49) return css.half;\n//   return css.empty;\n// };\n\nconst getColor = ({ value, type }) => {\n  const style = !value || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const RolledDice = ({ value, diceMax, type, selected, id }) => {\n  const dispatch = useDispatch();\n  const onClick = () => {\n    dispatch(toggleDiceSelection(id));\n  };\n  return (\n    <div\n      className={`${css.dice} ${getColor({ value, diceMax, type })} ${\n        selected ? css.selected : \"\"\n      }`}\n      onClick={onClick}\n    >\n      {value || diceMax || \"?\"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n      <div className={css.diceMaxCover}>{diceMax}</div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"diceBag\":\"RolledDiceBag_diceBag__OEjoy\"};","import { useCombat } from \"hooks\";\nimport { RolledDice } from \"components/RolledDice/RolledDice\";\nimport css from \"./RolledDiceBag.module.css\";\n\nexport const RolledDiceBag = () => {\n  const { rolledDices } = useCombat();\n\n  return (\n    <div className={css.diceBag}>\n      {(rolledDices ? rolledDices : []).map((el, index) => {\n        return <RolledDice {...el} key={`rolledDice|${el.type}|${index}`} />;\n      })}\n    </div>\n  );\n};\n","// import { useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectGameError } from \"redux/game/selectors\";\nimport css from \"./Page.module.css\";\nimport { useCombat } from \"hooks\";\nimport { EnemyBody } from \"components/EnemyBody/EnemyBody\";\nimport { SkillList } from \"components/SkillList/SkillList\";\nimport { Background } from \"components/Background/Background\";\nimport { RolledDiceBag } from \"components/RolledDiceBag/RolledDiceBag\";\nimport { selectEnemyLife } from \"redux/enemy/selectors\";\nimport { selectLoading as selectDungeonLoading } from \"redux/dungeon/selectors\";\nimport { selectLoading } from \"redux/combat/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const CombatPage = () => {\n  const { inCombat } = useCombat();\n  const error = useSelector(selectGameError);\n  const enemyLife = useSelector(selectEnemyLife);\n  const dungeonLoading = useSelector(selectDungeonLoading);\n  const combatLoading = useSelector(selectLoading);\n\n  return inCombat === \"summary\" ? (\n    <Navigate to=\"/summary\" />\n  ) : dungeonLoading || combatLoading ? (\n    <Loader />\n  ) : (\n    <main className={css.main}>\n      {error ? <span className={css.error}>{error}</span> : \"\"}\n      {\n        !inCombat ? (\n          <Navigate to=\"/dungeon\" />\n        ) : enemyLife < 1 ? (\n          <Navigate to=\"/return\" />\n        ) : (\n          <>\n            <Background />\n            {/* <AAATester /> */}\n            {/* <Title title={`Combat`} /> */}\n            {/* <Title title={`Lv.${lv} ${dungeonName} ${dungeonEvName}`} /> */}\n            {/* <EnemyPortrait /> */}\n\n            <EnemyBody />\n            <RolledDiceBag />\n            <SkillList />\n          </>\n        ) // end of combat page\n      }\n    </main>\n  );\n};\n\nexport default CombatPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"EnemyBody_body__SNMRT\",\"piece\":\"EnemyBody_piece__m6sgA\",\"middleContainer\":\"EnemyBody_middleContainer__tatOZ\",\"displayedBodyPart\":\"EnemyBody_displayedBodyPart__94tgg\",\"leftHolder\":\"EnemyBody_leftHolder__mO2A4\",\"damageHolder\":\"EnemyBody_damageHolder__veb4+\",\"modifier\":\"EnemyBody_modifier__KoRSl\",\"x2\":\"EnemyBody_x2__fVl44\",\"requiredHolder\":\"EnemyBody_requiredHolder__6QNCW\",\"diceHolder\":\"EnemyBody_diceHolder__+wfoq\",\"dmg\":\"EnemyBody_dmg__ECDC4\",\"disabled\":\"EnemyBody_disabled__aLzAg\",\"fulfilled\":\"EnemyBody_fulfilled__vmh42\",\"waiting\":\"EnemyBody_waiting__XT6PA\"};"],"names":["getFrame","value","type","style","undefined","css","DiceIcon","diceMax","className","getDiceTypeIcon","Actions","piecee","rolledDices","piece","JSON","parse","stringify","toDispatch","foundRD","bag","Array","isArray","length","foundSD","filter","dice","selected","selectedDices","pieceDices","dices","returnAllPieceDicesToBag","diceArray","forEach","d","push","addMultipleRolledDice","deleteAllPieceDices","id","disabled","fulfilled","findFirstAllowedDice","firstAllowedDice","i","thisDice","Piece","placeBodyPieceDice","pieceId","deleteRolledDice","console","log","EnemyPiece","p","dispatch","useDispatch","useCombat","useState","editToDispatch","damageIcons","requiredIcons","weaknessTypes","weakness","useEffect","runDispatch","dispatchFunc","map","index","onClick","concat","bodyPartIcon","key","PieceIcon","getColor","required","allowed","Miniature","padding","bgTxtFront","bgTxtBack","children","bgColor","backgroundColor","SkillList","filters","extraFilters","useSelector","selectFilters","dungeon","useDungeon","items","selectPackedItems","combat","selectLoading","Loader","filterItems","el","SkillSquare","name","alt","itemId","skill","currentUses","success","Skill","statsTxT","toggleSelect","updateItem","lv","icon","tags","txt","displayCost","inCombat","url","fetchSkillEvaluations","sequence","state","found","getSkillEvalById","evaluation","collection","false","evaId","params","fetchSkillEvaluation","usedDices","thisItem","find","arrayToTest","arr","singleResult","execute","diceIdArr","getDiceFromId","arrayToExecute","getSkillExecById","exec","exeId","fetchSkillExecution","funcList","deleteAllSelectedDices","useDungeonItemSkill","EnemyBody","body","useEnemy","myBody","RolledDice","toggleDiceSelection","RolledDiceBag","CombatPage","error","selectGameError","enemyLife","selectEnemyLife","dungeonLoading","selectDungeonLoading","combatLoading","to","Background"],"sourceRoot":""}