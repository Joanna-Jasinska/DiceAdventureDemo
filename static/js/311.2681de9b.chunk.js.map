{"version":3,"file":"static/js/311.2681de9b.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/DiceIcon/DiceIcon.module.css?7f0e","components/DiceIcon/DiceIcon.js","webpack://DiceAdventureDemo/./src/components/DungeonSquare/DungeonSquare.module.css?79c2","components/DungeonSquare/DungeonSquare.jsx","webpack://DiceAdventureDemo/./src/components/LevelUps/LevelUps.module.css?9d0b","components/LevelUps/LevelUps.jsx","webpack://DiceAdventureDemo/./src/components/Miniature/Miniature.module.css?652d","components/Miniature/Miniature.jsx","webpack://DiceAdventureDemo/./src/components/SkillList/SkillList.module.css?e556","components/SkillList/SkillList.jsx","webpack://DiceAdventureDemo/./src/components/SkillSquare/SkillSquare.module.css?bc81","components/SkillSquare/SkillSquare.jsx","data/skillEvaluation/skillEvaluation.js","objects/Skill.js","data/skillsExecution/skillExecution.js","pages/DungeonPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"DiceIcon_dice__mzHqX\",\"icon\":\"DiceIcon_icon__Rr08e\",\"physical\":\"DiceIcon_physical__yV2lY\",\"magic\":\"DiceIcon_magic__15Bfj\",\"elemental\":\"DiceIcon_elemental__B0alV\",\"trait\":\"DiceIcon_trait__fPQ3I\",\"any\":\"DiceIcon_any__f-UYu\",\"notRolled\":\"DiceIcon_notRolled__oeujV\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./DiceIcon.module.css\";\n\nconst getFrame = ({ value, type }) => {\n  const style = value === undefined || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"trait\":\n      return `${style}${css.trait}`;\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const DiceIcon = ({ value, diceMax, type }) => {\n  return (\n    <div className={`${css.dice} ${getFrame({ value, type })}`}>\n      {value || diceMax || \" \"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DungeonSquare_item__qIj3c\",\"bar\":\"DungeonSquare_bar__zX7ka\",\"iconBag\":\"DungeonSquare_iconBag__JG6Zg\",\"button\":\"DungeonSquare_button__1IOgw\",\"selected\":\"DungeonSquare_selected__24Thy\",\"text\":\"DungeonSquare_text__iDjwK\",\"level\":\"DungeonSquare_level__Auzzp\",\"name\":\"DungeonSquare_name__9UrAj\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport css from \"./DungeonSquare.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectDungeon } from \"redux/game/operations\";\nimport { getDiceTypeIcon } from \"data/icons\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\n\nexport const DungeonSquare = ({\n  name,\n  eventName,\n  id,\n  selected = false,\n  background,\n  lv = -1,\n  weakness = false,\n  index,\n  // eventId,\n  // lvStarted,\n  // lvReached,\n  // gold,\n  // ally,\n}) => {\n  const dispatch = useDispatch();\n  const { bgColor, icon, eventIcon } = background;\n  const weaknessTypes = weakness && weakness !== undefined ? weakness : false;\n\n  const selectSelf = () => {\n    if (!selected) {\n      dispatch(setSelectDungeon(index));\n    }\n  };\n  return (\n    <div className={css.item} id={id}>\n      <Miniature\n        // url={icon}\n        alt={name}\n        bgTxtFront={eventIcon}\n        bgTxtBack={icon}\n        bgColor={bgColor}\n        // lv={lvReached}\n      />\n      <div className={css.bar}>\n        {selected === \"hide\" ? (\n          \"\"\n        ) : (\n          <button\n            key={`${name}btn${id}`}\n            className={`${css.button} ${selected ? css.selected : \"\"} ${\n              css.delete\n            }`}\n            type=\"button\"\n            onClick={selectSelf}\n          >\n            {selected ? getDiceTypeIcon(\"playerAttack\") : \"🠘\"}\n          </button>\n        )}\n        <span className={css.text}>\n          <span className={css.level}>{`${lv} `}</span>\n          <span className={css.name}>{`${name}\\n${eventName}`}</span>\n        </span>\n      </div>\n      <div className={css.iconBag}>\n        {weaknessTypes\n          ? weaknessTypes.map((w, index) => (\n              <DiceIcon type={w} key={`dungeonWeakness|${id}|${index}`} />\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"miniature\":\"LevelUps_miniature__2zwxJ\",\"shrink\":\"LevelUps_shrink__7KL08\",\"padding\":\"LevelUps_padding__nWS-q\",\"lv\":\"LevelUps_lv__6KwYG\",\"textBoxContainer\":\"LevelUps_textBoxContainer__dcNuL\",\"bgColorFront\":\"LevelUps_bgColorFront__hLEBc\",\"textBoxBack\":\"LevelUps_textBoxBack__EvX-V\",\"imgFrame\":\"LevelUps_imgFrame__YuZgh\"};","// import { PropTypes } from \"prop-types\";\nimport css from \"./LevelUps.module.css\";\n\nexport const LevelUps = ({ lv, shrink = false }) => {\n  // const { lv, startedLv } = useDungeon();\n  // const levelsEarned = startedLv && lv ? Math.max(0, startedLv - lv) : 0;\n  const levelsEarned = lv || 0;\n  return levelsEarned === 0 ? (\n    <></>\n  ) : (\n    <div className={`${css.miniature} ${shrink ? css.shrink : \"\"}`}>\n      <div className={`${css.imgFrame}`}>\n        <div className={css.lv}>{levelsEarned}</div>\n        <div className={css.textBoxContainer}>\n          <div className={css.textBoxBack}>Lv</div>\n          <div className={css.bgColorFront}>⮉</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n// Miniature.propTypes = {\n//   url: PropTypes.string,\n//   alt: PropTypes.string,\n//   title: PropTypes.object,\n//   padding: PropTypes.bool,\n//   bg: PropTypes.string,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"miniature\":\"Miniature_miniature__-XChZ\",\"extension\":\"Miniature_extension__JEJLA\",\"padding\":\"Miniature_padding__AvpVc\",\"textBoxContainer\":\"Miniature_textBoxContainer__VBOAB\",\"textBoxFront\":\"Miniature_textBoxFront__YIyfd\",\"textBoxBack\":\"Miniature_textBoxBack__b4yIz\",\"imgFrame\":\"Miniature_imgFrame__3V+X9\",\"figcaption\":\"Miniature_figcaption__PifSq\",\"img\":\"Miniature_img__7uR5g\"};","import { PropTypes } from \"prop-types\";\nimport css from \"./Miniature.module.css\";\n\nexport const Miniature = ({\n  // url,\n  // alt = \"😎\",\n  // title,\n  padding = false,\n  bgTxtFront = \"\",\n  bgTxtBack = \"\",\n  children,\n  bgColor = \"#d7ca92\",\n}) => {\n  return (\n    <figure className={`${css.miniature} ${children ? css.extended : \"\"}`}>\n      <div\n        className={`${css.imgFrame} ${padding ? css.padding : \"\"} `}\n        style={{ backgroundColor: `${bgColor}` }}\n      >\n        {/* {url && url !== \"\" ? (\n          <img className={css.img} src={url} alt={`\\n${alt}`} />\n        ) : ( */}\n        <div className={css.textBoxContainer}>\n          <div className={css.textBoxBack}>{bgTxtBack}</div>\n          <div className={css.textBoxFront}>{bgTxtFront}</div>\n        </div>\n        {/* )} */}\n      </div>\n      {children ? <div className={css.extension}> {children}</div> : \"\"}\n    </figure>\n  );\n};\nMiniature.propTypes = {\n  bgTxtFront: PropTypes.string,\n  bgTxtBack: PropTypes.string,\n  bgColor: PropTypes.string,\n  padding: PropTypes.bool,\n  // title: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SkillList_list__0NNv7\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectLoading, selectFilters } from \"redux/eq/selectors\";\nimport { SkillSquare } from \"components/SkillSquare/SkillSquare\";\nimport { updateItem } from \"redux/eq/operations\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { selectPackedItems } from \"redux/dungeon/selectors\";\nimport { useCombat, useDungeon } from \"hooks\";\nimport { Skill } from \"objects/Skill\";\nimport css from \"./SkillList.module.css\";\n\nexport const SkillList = ({ filters }) => {\n  const extraFilters = useSelector(selectFilters);\n  const { dungeon } = useDungeon();\n\n  const dispatch = useDispatch();\n  const items = useSelector(selectPackedItems);\n\n  const filterItems = (filters, items) => {\n    const filteredItems = items\n      ? Array.isArray(items)\n        ? [\n            ...items.filter((i) => {\n              return !filters.selected || i.selected === filters.selected;\n            }),\n          ]\n        : items\n      : items;\n    return filteredItems;\n  };\n  const { combat } = useCombat();\n\n  return (\n    <div className={css.list}>\n      {useSelector(selectLoading) ? (\n        <>\n          <Loader />\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {/* <Item {...items.all[0]} /> */}\n      {/* filters || extraFilters */}\n      {items\n        ? Array.isArray(items)\n          ? filterItems(filters || extraFilters, items).map((el, index) => {\n              return (\n                <SkillSquare\n                  name={`${el.name}`}\n                  alt={`${el.alt}`}\n                  itemId={`${el.itemId}`}\n                  key={`${el.name}|${el.index}|${el.id}`}\n                  // key={`key|${index}`}\n                  index={index}\n                  selected={el.selected}\n                  skill={el.skill}\n                  currentUses={el.currentUses}\n                  success={Skill.usedDices(el.itemId, { combat, dungeon })}\n                  statsTxT={el.statsTxT || \"\"}\n                  toggleSelect={() =>\n                    dispatch(\n                      updateItem({\n                        ...el,\n                        selected: !el.selected,\n                      })\n                    )\n                  }\n                  dices={el.dices}\n                  lv={el.lv}\n                />\n              );\n            })\n          : \"\"\n        : \"\"}\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SkillSquare_item__bxD12\",\"canFire\":\"SkillSquare_canFire__YwXx-\",\"skillButton\":\"SkillSquare_skillButton__6sBaz\",\"bar\":\"SkillSquare_bar__HFaeU\",\"text\":\"SkillSquare_text__k4BJE\",\"name\":\"SkillSquare_name__thDuJ\",\"iconBag\":\"SkillSquare_iconBag__c+K-+\",\"disabled\":\"SkillSquare_disabled__L5kRC\",\"spent\":\"SkillSquare_spent__cyghQ\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport css from \"./SkillSquare.module.css\";\nimport { useCombat } from \"hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Skill } from \"objects/Skill\";\n\nexport const SkillSquare = ({\n  name,\n  itemId,\n  icon,\n  alt,\n  tags = [\"\"],\n  // lv = 1,\n  // selected = false,\n  // toggleSelect,\n  // dices,\n  success = false,\n  currentUses = -1,\n  // stats = [],\n  skill = {\n    name: \"NO SKILL\",\n    txt: \"-\",\n    id: \"skill|id\",\n    displayCost: [],\n  },\n  // statsTxT,\n}) => {\n  const [toDispatch, editToDispatch] = useState([]);\n  const { inCombat, combat } = useCombat();\n  const dispatch = useDispatch();\n\n  const fireSkill = () => {\n    if (success && toDispatch.length === 0) {\n      // console.log(`--------FIRING SKILL - ADDING TO DISPATCH--------`);\n      editToDispatch([\n        ...toDispatch.concat(Skill.execute(itemId, { combat }, success)),\n      ]);\n      // editToDispatch((prevToDispatch) => [\n      //   ...prevToDispatch,\n      //   Skill.execute(skill.id, { combat }, success),\n      // ]);\n    }\n  };\n\n  useEffect(() => {\n    const runDispatch = async (toDispatch) => {\n      for (const dispatchFunc of toDispatch) {\n        if (dispatchFunc !== false) {\n          await dispatch(dispatchFunc());\n        }\n      }\n      editToDispatch([]);\n    };\n\n    if (toDispatch.length > 0) {\n      runDispatch(toDispatch);\n    }\n  }, [toDispatch, dispatch]);\n\n  return (\n    <div\n      className={`${css.item} ${\n        inCombat !== true || currentUses < 0\n          ? css.display\n          : success\n          ? css.canFire\n          : css.disabled\n      } ${inCombat === true && currentUses === 0 ? css.spent : \"\"}`}\n      id={itemId}\n    >\n      <Miniature url={icon} alt={alt || name} bgTxtBack={tags[0]} />\n      <div\n        key={`${name}btn${itemId}`}\n        className={`${css.skillButton} `}\n        onClick={fireSkill}\n      >\n        {alt}\n      </div>\n      <div className={css.bar}>\n        <div className={css.iconBag}>\n          {(skill.displayCost ? skill.displayCost : []).map((el, index) => {\n            return <DiceIcon {...el} key={`${name}|${el.type}|${index}`} />;\n          })}\n        </div>\n\n        <div className={css.text}>{skill.txt}</div>\n        <span className={css.name}>{skill.name}</span>\n      </div>\n    </div>\n  );\n};\n","import { getSkillEvalById } from \"data/eq\";\n// import { SKILL_EVALUATION } from \"../skillEvaluations\";\n// import { getSkillById } from \"../skills\";\n\nconst fetchSkillEvaluation = (id, state) => {\n  // returns array of functions\n  if (!id) return [];\n  const found = getSkillEvalById(id) || [];\n  // const found = SKILL_EVALUATION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((evaluation) => {\n      const collection = evaluation[0] || { false: () => false };\n      const evaId = evaluation.length > 0 ? evaluation[1] || false : false;\n      const params = evaluation.length > 1 ? evaluation[2] || {} : {};\n      const func = () => collection[evaId]({ params, state });\n      // console.log(\n      //   `Adding eval func collection[${evaId}](${params})`,\n      //   evaluation\n      // );\n      return func;\n    }),\n  ];\n  return sequence;\n};\n\nexport const fetchSkillEvaluations = ({ itemId, state }) => {\n  // returns false or array of functions to evaluate\n  // const { evaluationId } = getSkillById(skillId);\n  // const sequence = fetchSkillEvaluation(evaluationId, state);\n  const sequence = fetchSkillEvaluation(itemId, state);\n  if (sequence.length < 1) return false;\n  // console.log(`Skill evaluations for:`, itemId, sequence);\n  return sequence;\n};\n","import { fetchSkillEvaluations } from \"data/skillEvaluation/skillEvaluation\";\nimport { fetchSkillExecution } from \"data/skillsExecution/skillExecution\";\nimport { deleteAllSelectedDices } from \"redux/combat/operations\";\nimport { useDungeonItemSkill } from \"redux/dungeon/operations\";\nconst getDiceFromId = (id, dices) => {\n  const found = dices.find((dice) => dice.id === id);\n  return found || {};\n};\n\nexport const Skill = {\n  usedDices(itemId, state) {\n    // returns false or array of dice ids\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    const dungeon = state.dungeon || false;\n    const items = dungeon ? dungeon.items || false : false;\n    const thisItem = items ? items.find((i) => i.itemId === itemId) : false;\n    const currentUses = thisItem ? thisItem.currentUses || 0 : 0;\n    if (currentUses < 1) return false;\n    const arrayToTest = fetchSkillEvaluations({\n      itemId,\n      state,\n    });\n    // let result;\n    if (!arrayToTest) {\n      console.log(`${itemId} had no evaluations to perform`);\n      return false;\n    }\n    const arr = [...arrayToTest];\n    // let txt = \"\";\n    let success = true;\n    let i = 0;\n    while (success && i < arr.length) {\n      const singleResult = arr[i]();\n      if (singleResult === undefined || singleResult === false) {\n        success = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (success !== true && success !== false) {\n            success = [...success, ...singleResult];\n          } else {\n            success = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) success = false;\n    // result = { success, txt: txt };\n    // if(success)console.log(txt);\n    return success;\n  },\n  execute(itemId, state, diceIdArr) {\n    // returns false or array of func to dispatch\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    // !!!AAA!!! make fun that will pull dice from selected by the id\n    // console.log(`Skill.EXECUTE > diceIdArr`, diceIdArr);\n    const usedDices = [\n      ...diceIdArr.map((id) => {\n        return getDiceFromId(id, state.combat.rolledDices);\n      }),\n    ];\n    console.log(`Skill.EXECUTE > usedDices, diceIdArr`, usedDices, diceIdArr);\n    const arrayToExecute = fetchSkillExecution({\n      itemId,\n      state,\n      usedDices,\n    });\n    // let result;\n    if (!arrayToExecute) {\n      console.log(`${itemId} had no actions to execute`);\n      return false;\n    }\n    const arr = [...arrayToExecute];\n    // let txt = \"\";\n    let funcList = true;\n    // let funcList = [() => deleteAllSelectedDices()];\n    let i = 0;\n    // console.log(`----------Skill.execute [--------------------`);\n    while (funcList && i < arr.length) {\n      const singleResult = arr[i]();\n      // console.log(`------- while  executing func-----------`, arr[i]);\n      // console.log(\n      //   `------- while  singleResult.length[${singleResult.length}]-----------`,\n      //   singleResult\n      // );\n      if (singleResult === undefined || singleResult === false) {\n        funcList = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (funcList !== true && funcList !== false) {\n            funcList = [...funcList, ...singleResult];\n          } else {\n            funcList = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n\n    // console.log(`----------] Skill.execute--------------------`);\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) {\n      funcList = false;\n    } else {\n      if (funcList !== true && funcList !== false) {\n        funcList = [\n          ...funcList,\n          deleteAllSelectedDices,\n          () => useDungeonItemSkill(itemId),\n        ];\n      } else {\n        funcList = [deleteAllSelectedDices, () => useDungeonItemSkill(itemId)];\n      }\n    }\n    // result = { funcList, txt: txt };\n    // if(funcList)console.log(txt);\n    return funcList;\n  },\n};\n","// import { SKILL_EXECUTION } from \"data/skillExecutions\";\n// import { getSkillById } from \"../skills\";\nimport { getSkillExecById } from \"data/eq\";\n\nexport const fetchSkillExecution = ({ itemId, state, usedDices }) => {\n  // returns array of functions\n  // const id = getSkillById(skillId).actionId;\n  if (!itemId) return [];\n  const found = getSkillExecById(itemId) || [];\n  // const found = SKILL_EXECUTION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((exec) => {\n      const collection = exec[0] || { false: () => false };\n      const exeId = exec.length > 0 ? exec[1] || false : false;\n      const params = exec.length > 1 ? exec[2] || {} : {};\n      const func = () => collection[exeId]({ params, state, usedDices });\n      //   console.log(\n      //     `Adding eval func collection[${evaId}](${params})`,\n      //     exec\n      //   );\n      return func;\n    }),\n  ];\n  if (sequence.length < 1) return false;\n  console.log(`data> skillExecs > SkillExecs for:`, itemId, sequence);\n  return sequence;\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { selectGameError } from \"redux/game/selectors\";\nimport { HeaderNavBtn } from \"components/HeaderNavBtn/HeaderNavBtn\";\nimport { engageBoss, engageEnemyBySlot } from \"redux/dungeon/operations\";\nimport { useCombat, useDungeon } from \"hooks\";\nimport { beginCombat } from \"redux/combat/operations\";\nimport { loadEnemy } from \"redux/enemy/operations\";\nimport { Background } from \"components/Background/Background\";\nimport { PlayerAvatar } from \"components/PlayerAvatar/PlayerAvatar\";\nimport { SkillList } from \"components/SkillList/SkillList\";\nimport { BagOfGold } from \"components/BagOfGold/BagOfGold\";\nimport { LevelUps } from \"components/LevelUps/LevelUps\";\nimport css from \"./Page.module.css\";\nimport { DungeonSquare } from \"components/DungeonSquare/DungeonSquare\";\nimport { useGame } from \"hooks/useGame\";\n\nexport const DungeonPage = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectGameError);\n  const { name, eventName, bg, lv, slotsDefeated, goldEarned, startedLv } =\n    useDungeon();\n  const { selectedDungeonId } = useGame();\n  const { inCombat } = useCombat();\n  const levelUps = Math.max((lv || 0) - (startedLv || 0), 0);\n\n  const beginBattleBySlot = (n) => {\n    dispatch(engageEnemyBySlot(n))\n      .then(() => {\n        dispatch(loadEnemy())\n          .then(() => {\n            dispatch(beginCombat({}))\n              .then(() => {\n                // began combat successfully\n              })\n              .catch((error) => {\n                // did not begin combat\n              });\n          })\n          .catch((error) => {\n            // not loaded enemy\n          });\n      })\n      .catch((error) => {\n        // not engaged enemy\n      });\n  };\n\n  const beginBossBattle = () => {\n    dispatch(engageBoss())\n      .then(() => {\n        dispatch(loadEnemy())\n          .then(() => {\n            dispatch(beginCombat({}))\n              .then(() => {\n                // began combat successfully\n              })\n              .catch((error) => {\n                // did not begin combat\n              });\n          })\n          .catch((error) => {\n            // not loaded enemy\n          });\n      })\n      .catch((error) => {\n        // not engaged enemy\n      });\n  };\n  return (\n    <>\n      {inCombat ? (\n        <Navigate to=\"/combat\" />\n      ) : (\n        <main className={`${css.main} ${css.padding0}`}>\n          {error ? <span className={css.error}>{error}</span> : \"\"}\n          <Background />\n\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              // alignItems: \"center\",\n              justifyContent: \"center\",\n              gap: \"0.4rem\",\n              marginBottom: \"0.5rem\",\n            }}\n          >\n            <DungeonSquare\n              {...{\n                name,\n                eventName,\n                id: selectedDungeonId,\n                lv,\n                background: bg,\n                selected: \"hide\",\n              }}\n            />\n\n            <div\n              style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                gap: \"0.4rem\",\n                paddingTop: \"1rem\",\n              }}\n            >\n              <HeaderNavBtn\n                to=\"/combat\"\n                display={`${bg.icon}`}\n                onClick={() => beginBattleBySlot(0)}\n                completed={slotsDefeated[0]}\n                disabled={slotsDefeated[0]}\n                recommended={!slotsDefeated[0]}\n              />\n              <HeaderNavBtn\n                to=\"/combat\"\n                display={`${bg.eventIcon}`}\n                onClick={() => beginBattleBySlot(1)}\n                completed={slotsDefeated[1]}\n                disabled={slotsDefeated[1]}\n                recommended={!slotsDefeated[1]}\n              />\n              {/* <HeaderNavBtn\n                to=\"/combat\"\n                display={`${bg.flavorIcon}`}\n                onClick={() => beginBattleBySlot(2)}\n                completed={slotsDefeated[2]}\n                disabled={slotsDefeated[2]}\n                recommended={!slotsDefeated[2]}\n              /> */}\n              <HeaderNavBtn\n                to=\"/combat\"\n                display=\"Boss ☠️\"\n                onClick={beginBossBattle}\n                completed={slotsDefeated[\"boss\"]}\n                disabled={slotsDefeated[\"boss\"]}\n                warning={!slotsDefeated[\"boss\"]}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              gap: \"0.4rem\",\n            }}\n          >\n            <PlayerAvatar />\n            <LevelUps lv={levelUps} />\n            <BagOfGold gold={goldEarned} />\n          </div>\n          <SkillList />\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default DungeonPage;\n"],"names":["getFrame","value","type","style","undefined","css","DiceIcon","diceMax","className","getDiceTypeIcon","DungeonSquare","name","eventName","id","selected","background","lv","weakness","index","dispatch","useDispatch","bgColor","icon","eventIcon","weaknessTypes","Miniature","alt","bgTxtFront","bgTxtBack","onClick","setSelectDungeon","map","w","LevelUps","shrink","levelsEarned","padding","children","backgroundColor","SkillList","filters","extraFilters","useSelector","selectFilters","dungeon","useDungeon","items","selectPackedItems","combat","useCombat","selectLoading","Loader","Array","isArray","filter","i","filterItems","el","SkillSquare","itemId","skill","currentUses","success","Skill","statsTxT","toggleSelect","updateItem","dices","tags","txt","displayCost","useState","toDispatch","editToDispatch","inCombat","useEffect","runDispatch","dispatchFunc","length","url","concat","key","fetchSkillEvaluations","sequence","state","found","getSkillEvalById","evaluation","collection","false","evaId","params","fetchSkillEvaluation","usedDices","thisItem","find","arrayToTest","console","log","arr","singleResult","execute","diceIdArr","dice","getDiceFromId","rolledDices","arrayToExecute","getSkillExecById","exec","exeId","fetchSkillExecution","funcList","deleteAllSelectedDices","useDungeonItemSkill","DungeonPage","error","selectGameError","bg","slotsDefeated","goldEarned","startedLv","selectedDungeonId","useGame","levelUps","Math","max","beginBattleBySlot","n","engageEnemyBySlot","then","loadEnemy","beginCombat","catch","to","display","flexWrap","justifyContent","gap","marginBottom","paddingTop","completed","disabled","recommended","engageBoss","warning","gold"],"sourceRoot":""}