{"version":3,"file":"static/js/793.3ac002db.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/DiceIcon/DiceIcon.module.css?7f0e","components/DiceIcon/DiceIcon.js","webpack://DiceAdventureDemo/./src/components/Miniature/Miniature.module.css?652d","components/Miniature/Miniature.jsx","webpack://DiceAdventureDemo/./src/components/SkillSquare/SkillSquare.module.css?bc81","components/SkillSquare/SkillSquare.jsx","webpack://DiceAdventureDemo/./src/components/StatIcon/StatIcon.module.css?e029","components/StatIcon/StatIcon.js","data/skillEvaluation/skillEvaluation.js","objects/Skill.js","data/skillsExecution/skillExecution.js","webpack://DiceAdventureDemo/./src/components/AllySquare/AllySquare.module.css?a733","components/AllySquare/AllySquare.jsx","data/allies.js","webpack://DiceAdventureDemo/./src/components/AllyList/AllyList.module.css?a7ef","components/AllyList/AllyList.jsx","webpack://DiceAdventureDemo/./src/components/QuestList/QuestSquare/QuestSquare.module.css?1e67","components/QuestList/QuestSquare/QuestSquare.jsx","webpack://DiceAdventureDemo/./src/components/QuestList/QuestList.module.css?2e44","data/allies/wizard.js","data/allies/barbarian.js","data/allies/rogue.js","data/allies/hunter.js","data/allies/aristocrat.js","objects/Quest.js","components/QuestList/QuestList.jsx","pages/TownPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"DiceIcon_dice__mzHqX\",\"icon\":\"DiceIcon_icon__Rr08e\",\"physical\":\"DiceIcon_physical__yV2lY\",\"magic\":\"DiceIcon_magic__15Bfj\",\"elemental\":\"DiceIcon_elemental__B0alV\",\"trait\":\"DiceIcon_trait__fPQ3I\",\"any\":\"DiceIcon_any__f-UYu\",\"notRolled\":\"DiceIcon_notRolled__oeujV\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./DiceIcon.module.css\";\n\nconst getFrame = ({ value, type }) => {\n  const style = value === undefined || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"trait\":\n      return `${style}${css.trait}`;\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const DiceIcon = ({ value, diceMax, type }) => {\n  return (\n    <div className={`${css.dice} ${getFrame({ value, type })}`}>\n      {value || diceMax || \" \"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"miniature\":\"Miniature_miniature__-XChZ\",\"extension\":\"Miniature_extension__JEJLA\",\"padding\":\"Miniature_padding__AvpVc\",\"textBoxContainer\":\"Miniature_textBoxContainer__VBOAB\",\"textBoxFront\":\"Miniature_textBoxFront__YIyfd\",\"textBoxBack\":\"Miniature_textBoxBack__b4yIz\",\"imgFrame\":\"Miniature_imgFrame__3V+X9\",\"figcaption\":\"Miniature_figcaption__PifSq\",\"img\":\"Miniature_img__7uR5g\"};","import { PropTypes } from \"prop-types\";\nimport css from \"./Miniature.module.css\";\n\nexport const Miniature = ({\n  // url,\n  // alt = \"😎\",\n  // title,\n  padding = false,\n  bgTxtFront = \"\",\n  bgTxtBack = \"\",\n  children,\n  bgColor = \"#d7ca92\",\n}) => {\n  return (\n    <figure className={`${css.miniature} ${children ? css.extended : \"\"}`}>\n      <div\n        className={`${css.imgFrame} ${padding ? css.padding : \"\"} `}\n        style={{ backgroundColor: `${bgColor}` }}\n      >\n        {/* {url && url !== \"\" ? (\n          <img className={css.img} src={url} alt={`\\n${alt}`} />\n        ) : ( */}\n        <div className={css.textBoxContainer}>\n          <div className={css.textBoxBack}>{bgTxtBack}</div>\n          <div className={css.textBoxFront}>{bgTxtFront}</div>\n        </div>\n        {/* )} */}\n      </div>\n      {children ? <div className={css.extension}> {children}</div> : \"\"}\n    </figure>\n  );\n};\nMiniature.propTypes = {\n  bgTxtFront: PropTypes.string,\n  bgTxtBack: PropTypes.string,\n  bgColor: PropTypes.string,\n  padding: PropTypes.bool,\n  // title: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SkillSquare_item__bxD12\",\"canFire\":\"SkillSquare_canFire__YwXx-\",\"skillButton\":\"SkillSquare_skillButton__6sBaz\",\"bar\":\"SkillSquare_bar__HFaeU\",\"text\":\"SkillSquare_text__k4BJE\",\"name\":\"SkillSquare_name__thDuJ\",\"iconBag\":\"SkillSquare_iconBag__c+K-+\",\"disabled\":\"SkillSquare_disabled__L5kRC\",\"spent\":\"SkillSquare_spent__cyghQ\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport css from \"./SkillSquare.module.css\";\nimport { useCombat } from \"hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Skill } from \"objects/Skill\";\n\nexport const SkillSquare = ({\n  name,\n  itemId,\n  icon,\n  alt,\n  tags = [\"\"],\n  // lv = 1,\n  // selected = false,\n  // toggleSelect,\n  // dices,\n  success = false,\n  currentUses = -1,\n  // stats = [],\n  skill = {\n    name: \"NO SKILL\",\n    txt: \"-\",\n    id: \"skill|id\",\n    displayCost: [],\n  },\n  // statsTxT,\n}) => {\n  const [toDispatch, editToDispatch] = useState([]);\n  const { inCombat, combat } = useCombat();\n  const dispatch = useDispatch();\n\n  const fireSkill = () => {\n    if (success && toDispatch.length === 0) {\n      // console.log(`--------FIRING SKILL - ADDING TO DISPATCH--------`);\n      editToDispatch([\n        ...toDispatch.concat(Skill.execute(itemId, { combat }, success)),\n      ]);\n      // editToDispatch((prevToDispatch) => [\n      //   ...prevToDispatch,\n      //   Skill.execute(skill.id, { combat }, success),\n      // ]);\n    }\n  };\n\n  useEffect(() => {\n    const runDispatch = async (toDispatch) => {\n      for (const dispatchFunc of toDispatch) {\n        if (dispatchFunc !== false) {\n          await dispatch(dispatchFunc());\n        }\n      }\n      editToDispatch([]);\n    };\n\n    if (toDispatch.length > 0) {\n      runDispatch(toDispatch);\n    }\n  }, [toDispatch, dispatch]);\n\n  return (\n    <div\n      className={`${css.item} ${\n        inCombat !== true || currentUses < 0\n          ? css.display\n          : success\n          ? css.canFire\n          : css.disabled\n      } ${inCombat === true && currentUses === 0 ? css.spent : \"\"}`}\n      id={itemId}\n    >\n      <Miniature url={icon} alt={alt || name} bgTxtBack={tags[0]} />\n      <div\n        key={`${name}btn${itemId}`}\n        className={`${css.skillButton} `}\n        onClick={fireSkill}\n      >\n        {alt}\n      </div>\n      <div className={css.bar}>\n        <div className={css.iconBag}>\n          {(skill.displayCost ? skill.displayCost : []).map((el, index) => {\n            return <DiceIcon {...el} key={`${name}|${el.type}|${index}`} />;\n          })}\n        </div>\n\n        <div className={css.text}>{skill.txt}</div>\n        <span className={css.name}>{skill.name}</span>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"stat\":\"StatIcon_stat__bvU0-\",\"icon\":\"StatIcon_icon__U+1Gf\",\"random\":\"StatIcon_random__mTIhc\",\"full\":\"StatIcon_full__5H3WC\",\"half\":\"StatIcon_half__AqZCZ\",\"empty\":\"StatIcon_empty__jxwgw\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./StatIcon.module.css\";\n\n// const getColor = ({ type, maxHp='' }) => {\n//   //   console.log(`getting color ${value} / ${diceMax}`);\n//   if (!value || value === -1) return css.random;\n//   const percentage = (100 * value) / diceMax;\n//   if (percentage > 90) return css.full;\n//   if (percentage > 49) return css.half;\n//   return css.empty;\n// };\n\nexport const StatIcon = ({ type, maxHp = \"\" }) => {\n  return (\n    <div\n      // className={`${css.dice} ${getColor({ value, diceMax })}`}\n      className={`${css.stat}`}\n      // data-text={`${diceMax}`}\n    >\n      {maxHp} <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","import { getSkillEvalById } from \"data/eq\";\n// import { SKILL_EVALUATION } from \"../skillEvaluations\";\n// import { getSkillById } from \"../skills\";\n\nconst fetchSkillEvaluation = (id, state) => {\n  // returns array of functions\n  if (!id) return [];\n  const found = getSkillEvalById(id) || [];\n  // const found = SKILL_EVALUATION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((evaluation) => {\n      const collection = evaluation[0] || { false: () => false };\n      const evaId = evaluation.length > 0 ? evaluation[1] || false : false;\n      const params = evaluation.length > 1 ? evaluation[2] || {} : {};\n      const func = () => collection[evaId]({ params, state });\n      // console.log(\n      //   `Adding eval func collection[${evaId}](${params})`,\n      //   evaluation\n      // );\n      return func;\n    }),\n  ];\n  return sequence;\n};\n\nexport const fetchSkillEvaluations = ({ itemId, state }) => {\n  // returns false or array of functions to evaluate\n  // const { evaluationId } = getSkillById(skillId);\n  // const sequence = fetchSkillEvaluation(evaluationId, state);\n  const sequence = fetchSkillEvaluation(itemId, state);\n  if (sequence.length < 1) return false;\n  // console.log(`Skill evaluations for:`, itemId, sequence);\n  return sequence;\n};\n","import { fetchSkillEvaluations } from \"data/skillEvaluation/skillEvaluation\";\nimport { fetchSkillExecution } from \"data/skillsExecution/skillExecution\";\nimport { deleteAllSelectedDices } from \"redux/combat/operations\";\nimport { useDungeonItemSkill } from \"redux/dungeon/operations\";\nconst getDiceFromId = (id, dices) => {\n  const found = dices.find((dice) => dice.id === id);\n  return found || {};\n};\n\nexport const Skill = {\n  usedDices(itemId, state) {\n    // returns false or array of dice ids\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    const dungeon = state.dungeon || false;\n    const items = dungeon ? dungeon.items || false : false;\n    const thisItem = items ? items.find((i) => i.itemId === itemId) : false;\n    const currentUses = thisItem ? thisItem.currentUses || 0 : 0;\n    if (currentUses < 1) return false;\n    const arrayToTest = fetchSkillEvaluations({\n      itemId,\n      state,\n    });\n    // let result;\n    if (!arrayToTest) {\n      console.log(`${itemId} had no evaluations to perform`);\n      return false;\n    }\n    const arr = [...arrayToTest];\n    // let txt = \"\";\n    let success = true;\n    let i = 0;\n    while (success && i < arr.length) {\n      const singleResult = arr[i]();\n      if (singleResult === undefined || singleResult === false) {\n        success = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (success !== true && success !== false) {\n            success = [...success, ...singleResult];\n          } else {\n            success = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) success = false;\n    // result = { success, txt: txt };\n    // if(success)console.log(txt);\n    return success;\n  },\n  execute(itemId, state, diceIdArr) {\n    // returns false or array of func to dispatch\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    // !!!AAA!!! make fun that will pull dice from selected by the id\n    // console.log(`Skill.EXECUTE > diceIdArr`, diceIdArr);\n    const usedDices = [\n      ...diceIdArr.map((id) => {\n        return getDiceFromId(id, state.combat.rolledDices);\n      }),\n    ];\n    console.log(`Skill.EXECUTE > usedDices, diceIdArr`, usedDices, diceIdArr);\n    const arrayToExecute = fetchSkillExecution({\n      itemId,\n      state,\n      usedDices,\n    });\n    // let result;\n    if (!arrayToExecute) {\n      console.log(`${itemId} had no actions to execute`);\n      return false;\n    }\n    const arr = [...arrayToExecute];\n    // let txt = \"\";\n    let funcList = true;\n    // let funcList = [() => deleteAllSelectedDices()];\n    let i = 0;\n    // console.log(`----------Skill.execute [--------------------`);\n    while (funcList && i < arr.length) {\n      const singleResult = arr[i]();\n      // console.log(`------- while  executing func-----------`, arr[i]);\n      // console.log(\n      //   `------- while  singleResult.length[${singleResult.length}]-----------`,\n      //   singleResult\n      // );\n      if (singleResult === undefined || singleResult === false) {\n        funcList = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (funcList !== true && funcList !== false) {\n            funcList = [...funcList, ...singleResult];\n          } else {\n            funcList = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n\n    // console.log(`----------] Skill.execute--------------------`);\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) {\n      funcList = false;\n    } else {\n      if (funcList !== true && funcList !== false) {\n        funcList = [\n          ...funcList,\n          deleteAllSelectedDices,\n          () => useDungeonItemSkill(itemId),\n        ];\n      } else {\n        funcList = [deleteAllSelectedDices, () => useDungeonItemSkill(itemId)];\n      }\n    }\n    // result = { funcList, txt: txt };\n    // if(funcList)console.log(txt);\n    return funcList;\n  },\n};\n","// import { SKILL_EXECUTION } from \"data/skillExecutions\";\n// import { getSkillById } from \"../skills\";\nimport { getSkillExecById } from \"data/eq\";\n\nexport const fetchSkillExecution = ({ itemId, state, usedDices }) => {\n  // returns array of functions\n  // const id = getSkillById(skillId).actionId;\n  if (!itemId) return [];\n  const found = getSkillExecById(itemId) || [];\n  // const found = SKILL_EXECUTION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((exec) => {\n      const collection = exec[0] || { false: () => false };\n      const exeId = exec.length > 0 ? exec[1] || false : false;\n      const params = exec.length > 1 ? exec[2] || {} : {};\n      const func = () => collection[exeId]({ params, state, usedDices });\n      //   console.log(\n      //     `Adding eval func collection[${evaId}](${params})`,\n      //     exec\n      //   );\n      return func;\n    }),\n  ];\n  if (sequence.length < 1) return false;\n  console.log(`data> skillExecs > SkillExecs for:`, itemId, sequence);\n  return sequence;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"AllySquare_item__y3iCq\",\"bar\":\"AllySquare_bar__lLA8D\",\"iconBag\":\"AllySquare_iconBag__mLOyY\",\"button\":\"AllySquare_button__igN6g\",\"selected\":\"AllySquare_selected__olgkZ\",\"text\":\"AllySquare_text__kQ9A2\",\"level\":\"AllySquare_level__J1Ciw\",\"name\":\"AllySquare_name__pkSaf\",\"title\":\"AllySquare_title__U9nPL\",\"subtitle\":\"AllySquare_subtitle__WcFeV\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport css from \"./AllySquare.module.css\";\n\nexport const AllySquare = ({\n  name = \"Ally\",\n  title = \"\",\n  id,\n  bgTxtFront,\n  bgTxtBack,\n  bgColor,\n  lv = 1,\n}) => {\n  return (\n    <div className={css.item} id={id}>\n      <Miniature\n        alt={name}\n        bgTxtFront={bgTxtFront}\n        bgTxtBack={bgTxtBack}\n        bgColor={bgColor}\n      />\n      <div className={css.bar}>\n        <div className={css.subtitle}>Friendship</div>\n        <span className={css.level}>{lv}</span>\n        <span className={css.text}>\n          <span className={css.name}>{`${name}`}</span>\n        </span>\n      </div>\n    </div>\n  );\n};\n","export const getAlly = (id) => {\n  return ALLIES.find(id);\n};\nexport const ALLIES = [\n  {\n    name: \"Tashka\",\n    id: \"ally|4|\",\n    type: \"barbarian\",\n    title: \"Elite Rajavi Pathforcer\",\n    icon: \"🧞‍♀️\",\n    eventIcon: \"🪓\",\n    bgColor: \"#742727\",\n  },\n  {\n    name: \"Valathar\",\n    id: \"ally|2|\",\n    type: \"aristocrat\",\n    title: \"Rajavi Aristocrat & Pathforcer\",\n    icon: \"🧝‍♀️\",\n    eventIcon: \"🦌\",\n    bgColor: \"#745c27\",\n  },\n  {\n    name: \"Zern\",\n    id: \"ally|3|\",\n    type: \"hunter\",\n    title: \"Rajavi Hunter & Pathforcer\",\n    icon: \"🧝🏻\",\n    eventIcon: \"🌾\",\n    bgColor: \"#4a7427\",\n  },\n  {\n    name: \"Mir\",\n    id: \"ally|5|\",\n    type: \"rogue\",\n    title: \"Elite Rajavi Pathforcer\",\n    icon: \"🦹‍♀️\",\n    eventIcon: \"🔪\",\n    bgColor: \"#4b2774\",\n  },\n\n  {\n    name: \"Ihlaoxeus\",\n    // name: \"Xinaleus\",\n    id: \"ally|1|\",\n    type: \"wizard\",\n    title: \"Rajavi Mage & Pathforcer\",\n    icon: \"🧙\",\n    eventIcon: \"✨\",\n    bgColor: \"#275674\",\n  },\n\n  //   { type: \"ally\", icon: \"🍭\", color: \"#fff\", id: \"ally|1|rainbow\" },\n  //   { type: \"ally\", icon: \"🐕\", color: \"#fff\", id: \"ally|2|dog\" },\n  //   { type: \"ally\", icon: \"🐍\", color: \"#fff\", id: \"ally|3|snake\" },\n  //   { type: \"ally\", icon: \"🐎\", color: \"#fff\", id: \"ally|4|horse\" },\n  //   { type: \"ally\", icon: \"⛆\", color: \"#fff\", id: \"ally|5|fog\" },\n];\n\n// rogue 🦹‍♀️ weapons, poisons\n// barbarian🧞‍♀️ weapons, fighting styles\n// wizard🧙 spells, familiars, potions\n// elf 🧝‍♀️ artifacts, armor, medicine\n// hunter🧝🏻 weapons, utility, beasts, food\n//---deleted-----hermit👩🏾‍🌾 medicine\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AllyList_list__UGSa7\"};","import { AllySquare } from \"components/AllySquare/AllySquare\";\nimport { ALLIES } from \"data/allies\";\nimport { getAlly } from \"data/allies\";\nimport css from \"./AllyList.module.css\";\nimport { useGame } from \"hooks/useGame\";\n\nexport const AllyList = ({ id, list = ALLIES }) => {\n  const displayed = id ? [{ ...getAlly(id), type: \"\" }] : [...list];\n  const { allies } = useGame();\n  // console.log(`displayed`, displayed);\n  return (\n    <div className={css.list}>\n      {displayed.length < 1\n        ? \"\"\n        : displayed.map((el, index) => {\n            // console.log(`displayed[${index}]`, el);\n            return (\n              <AllySquare\n                {...{\n                  ...el,\n                  lv: allies[el.type].lv,\n                  bgTxtFront: el.icon,\n                  bgTxtBack: el.eventIcon,\n                  key: `ally|${index}|${el.id}`,\n                }}\n              />\n            );\n          })}\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuestSquare_item__rq9jF\",\"bar\":\"QuestSquare_bar__ms7IJ\",\"iconBag\":\"QuestSquare_iconBag__8-o+v\",\"selectButton\":\"QuestSquare_selectButton__su+i3\",\"buy\":\"QuestSquare_buy__Ge5IW\",\"glow\":\"QuestSquare_glow__SqJt-\",\"locked\":\"QuestSquare_locked__3Tn6n\",\"delevel\":\"QuestSquare_delevel__hrB-V\",\"selected\":\"QuestSquare_selected__71sTt\",\"text\":\"QuestSquare_text__ZhIiB\",\"level\":\"QuestSquare_level__A-7rs\",\"name\":\"QuestSquare_name__7d7my\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport { useDispatch } from \"react-redux\";\nimport css from \"./QuestSquare.module.css\";\n// import { itemLvUpx1, itemLvUpx10, resetItemLv } from \"redux/eq/operations\";\n// import {\n//   gainSpLvUps,\n//   payGold,\n//   remove10SpLvUps,\n//   remove1SpLvUp,\n// } from \"redux/game/operations\";\n// import { useGame } from \"hooks/useGame\";\nimport { SkillSquare } from \"components/SkillSquare/SkillSquare\";\nimport { StatIcon } from \"components/StatIcon/StatIcon\";\nimport { useGame } from \"hooks/useGame\";\nimport { unlockItem } from \"redux/eq/operations\";\nimport { lvUpAlly, payGold } from \"redux/game/operations\";\n// {\n//   dungeon: q.dungeon,\n//   item: Items.getItemById({ id: q.item }),\n//   locked,\n//   index,\n//   cost,\n// }\nexport const QuestSquare = ({ item, locked, cost, ally }) => {\n  // export const Quest = ({ dungeon, item, locked, index, cost }) => {\n  const {\n    name,\n    itemId,\n    icon,\n    alt,\n    tags = [\"\"],\n    lv = 1,\n    dices,\n    nondices,\n    skill = { name: \"NO SKILL\", txt: \"-\", id: \"noskill\" },\n  } = item;\n  const { gold } = useGame();\n  const dispatch = useDispatch();\n  // const { maxEqLv, spareLvUps, gold } = useGame();\n\n  const buy = (e) => {\n    e.preventDefault();\n    // increase ally lv\n    // remove gold\n    // get item\n    dispatch(payGold(cost)).then((result) => {\n      if (typeof result.payload !== \"string\") {\n        dispatch(lvUpAlly(ally));\n        dispatch(unlockItem(itemId));\n      }\n    });\n  };\n\n  return (\n    <div className={css.item} id={itemId}>\n      <Miniature\n        url={icon}\n        alt={alt || name}\n        bgTxtFront={alt}\n        bgTxtBack={tags[0]}\n        children={\n          <>\n            <SkillSquare skill={skill} />\n          </>\n        }\n      />\n      <div className={css.bar}>\n        {locked ? (\n          <div className={`${css.selectButton} ${css.locked} `}>{locked}</div>\n        ) : gold < cost ? (\n          <div\n            className={`${css.selectButton} ${css.locked} `}\n          >{`Price\\n${cost}💰`}</div>\n        ) : (\n          <button\n            key={`${name}btnLvUp${itemId}`}\n            className={`${css.selectButton} ${css.buy} `}\n            type=\"button\"\n            onClick={buy}\n          >\n            -{cost}💰\n          </button>\n        )}\n\n        <span className={css.text}>\n          <span className={css.level}>{`${lv} `}</span>\n          <span className={css.name}>{name + \" \"}</span>\n        </span>\n      </div>\n      <div className={css.iconBag}>\n        {(nondices ? nondices : []).map((el, index) => {\n          return <StatIcon {...el} key={`${name}|${el.type}|${index}`} />;\n        })}\n        {(dices ? dices : []).map((el, index) => {\n          return <DiceIcon {...el} key={`${name}|${el.type}|${index}`} />;\n        })}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuestList_list__D7p1M\"};","// wizard🧙 spells, familiars, potions\n//\"Castle\"\nexport const QUESTS_WIZARD = {\n  4: {\n    item: \"Bunny Familiar|BUNNY MAGIC|\",\n    dungeon: \"Castle\",\n  },\n};\n","// barbarian🧞‍♀️ weapons, fighting styles\n//\"Mountain\"\nexport const QUESTS_BARBARIAN = {\n  2: {\n    item: \"Kitchen Knives|KNIFE THROW|\",\n    dungeon: \"Mountain\",\n  },\n};\n","// rogue 🦹‍♀️ weapons, poisons\n//\"Island\"\nexport const QUESTS_ROGUE = {\n  3: {\n    item: \"Vial of Iroposion|MIX POISON|\",\n    dungeon: \"Island\",\n  },\n};\n","// hunter🧝🏻 weapons, utility, beasts, food\n//\"Valley\"\nexport const QUESTS_HUNTER = {\n  2: {\n    item: \"Rope|CLEVER USE|\",\n    dungeon: \"Valley\",\n  },\n};\n","// aristocrat 🧝‍♀️ artifacts, armor, medicine\n//\"Forest\"\nexport const QUESTS_ARISTOCRAT = {\n  1: {\n    item: \"Wooden Shield|SHIELD BASH +1|\",\n    dungeon: \"Forest\",\n  },\n  5: {\n    item: \"Leather Vest|THUMBLE -2|\",\n    dungeon: \"Forest\",\n  },\n};\n","import { Items } from \"./Items\";\nimport { QUESTS_WIZARD } from \"data/allies/wizard\";\nimport { QUESTS_BARBARIAN } from \"data/allies/barbarian\";\nimport { QUESTS_ROGUE } from \"data/allies/rogue\";\nimport { QUESTS_HUNTER } from \"data/allies/hunter\";\nimport { QUESTS_ARISTOCRAT } from \"data/allies/aristocrat\";\nimport { ITEM_BASE_COST, ITEM_PER_LV_COST } from \"data/settings\";\n\n// const getDungeonShortName = (id) => {\n//   switch (id) {\n//     case \"dungeon|1|\":\n//       return \"Mountain\";\n//     case \"dungeon|2|\":\n//       return \"Forest\";\n//     case \"dungeon|3|\":\n//       return \"Valley\";\n//     case \"dungeon|4|\":\n//       return \"Island\";\n//     case \"dungeon|5|\":\n//       return \"Castle\";\n//     default:\n//       return \"Forest\";\n//   }\n// };\nexport const Quest = {\n  getAllyQuests(\n    allyLv = 1,\n    caravanLv = 1,\n    dungeonLevels,\n    amount = false,\n    allyType\n  ) {\n    let collection = [];\n    switch (allyType) {\n      case \"wizard\":\n        collection = QUESTS_WIZARD;\n        break;\n      case \"barbarian\":\n        collection = QUESTS_BARBARIAN;\n        break;\n      case \"rogue\":\n        collection = QUESTS_ROGUE;\n        break;\n      case \"hunter\":\n        collection = QUESTS_HUNTER;\n        break;\n      case \"aristocrat\":\n        collection = QUESTS_ARISTOCRAT;\n        break;\n      default:\n        return [];\n    }\n    const questLevels = Object.keys(collection);\n    let checkingLv;\n    let checked = 0;\n    let iteration = allyLv;\n    let filtered = [];\n    while (\n      iteration < questLevels[questLevels.length - 1] &&\n      (!amount || checked < amount)\n    ) {\n      checkingLv = questLevels[iteration];\n      const q = collection[checkingLv] || false;\n      if (q) {\n        const reqCaravan = Math.floor((checkingLv || 0) / 3);\n        let locked = false;\n        if (dungeonLevels[q.dungeon] < checkingLv) {\n          locked = `Reach Lv ${checkingLv}\\n${q.dungeon}`;\n        }\n        if (caravanLv < reqCaravan) {\n          locked = `Move cravan\\nto unlock`;\n        }\n        const cost =\n          ITEM_BASE_COST +\n          (checkingLv >= 0 ? checkingLv * ITEM_PER_LV_COST : 0);\n        filtered.push({\n          dungeon: q.dungeon,\n          item: Items.getItemById({ id: q.item }),\n          locked,\n          index: iteration,\n          cost,\n          ally: allyType,\n        });\n        checked = checked + 1;\n      }\n      iteration = iteration + 1;\n    }\n    return filtered.length > 0 ? filtered : [];\n  },\n  getAvailableQuests(allies, caravanLv = 1, dungeonLevels, amount = 1) {\n    const wizard = this.getAllyQuests(\n      allies[\"wizard\"].lv,\n      caravanLv,\n      dungeonLevels,\n      amount,\n      \"wizard\"\n    );\n    const barbarian = this.getAllyQuests(\n      allies[\"barbarian\"].lv,\n      caravanLv,\n      dungeonLevels,\n      amount,\n      \"barbarian\"\n    );\n    const aristocrat = this.getAllyQuests(\n      allies[\"aristocrat\"].lv,\n      caravanLv,\n      dungeonLevels,\n      amount,\n      \"aristocrat\"\n    );\n    const hunter = this.getAllyQuests(\n      allies[\"hunter\"].lv,\n      caravanLv,\n      dungeonLevels,\n      amount,\n      \"hunter\"\n    );\n    const rogue = this.getAllyQuests(\n      allies[\"rogue\"].lv,\n      caravanLv,\n      dungeonLevels,\n      amount,\n      \"rogue\"\n    );\n    return [...barbarian, ...aristocrat, ...hunter, ...rogue, ...wizard];\n  },\n};\n","import { useSelector } from \"react-redux\";\nimport { selectLoading } from \"redux/eq/selectors\";\nimport { useGame } from \"hooks/useGame\";\nimport { QuestSquare } from \"./QuestSquare/QuestSquare\";\nimport { Loader } from \"components/Loader/Loader\";\nimport css from \"./QuestList.module.css\";\nimport { Quest } from \"objects/Quest\";\n\nexport const QuestList = () => {\n  // const extraFilters = useSelector(selectFilters);\n  // const items = useSelector(selectEq);\n  const { dungeonLevels, allies } = useGame();\n  const wizardQuests = Quest.getAvailableQuests(allies, 1, dungeonLevels);\n  const quests = [...(wizardQuests ? wizardQuests : [])];\n  // const wizardQuests=getWizardQuests(allyLv = 1, caravanLv = 1, dungeonLevels)\n\n  // const filterItems = (filters, items) => {\n  //   const filteredItems = items\n  //     ? Array.isArray(items)\n  //       ? [\n  //           ...items.filter((i) => {\n  //             return !filters.selected || i.selected === filters.selected;\n  //           }),\n  //         ]\n  //       : items\n  //     : items;\n  //   return filteredItems;\n  // };\n\n  return (\n    <div className={css.list}>\n      {useSelector(selectLoading) ? (\n        <>\n          <br />\n          <Loader />\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {/* <Item {...items.all[0]} /> */}\n      {/* filters || extraFilters */}\n      {quests\n        ? Array.isArray(quests)\n          ? // ? filterItems(filters || extraFilters, items).map((el, index) => {\n            quests.map((el, index) => {\n              return (\n                <QuestSquare\n                  {...el}\n                  // name={`${el.name}`}\n                  // alt={`${el.alt}`}\n                  // itemId={`${el.itemId}`}\n                  key={`Quest|${el.item.name}|${index}`}\n                  // index={index}\n                  // selected={el.selected}\n                  // skill={el.skill}\n                  // statsTxT={el.statsTxT || \"\"}\n                  // dices={el.dices}\n                  // nondices={el.nondices}\n                  // lv={el.lv}\n                />\n              );\n            })\n          : \"\"\n        : \"\"}\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","import { useSelector } from \"react-redux\";\nimport { selectGameError } from \"redux/game/selectors\";\nimport { AllyList } from \"components/AllyList/AllyList\";\nimport { QuestList } from \"components/QuestList/QuestList\";\n// import { useGame } from \"hooks/useGame\";\n// import { BagOfGold } from \"components/BagOfGold/BagOfGold\";\n// import { LevelUps } from \"components/LevelUps/LevelUps\";\n// import { PlayerLvAvatar } from \"components/PlayerLvAvatar/PlayerLvAvatar\";\n// import { TravelCount } from \"components/TravelCount/TravelCount\";\nimport css from \"./Page.module.css\";\n\nexport const TownPage = () => {\n  const error = useSelector(selectGameError);\n  // const { gold, spareLvUps, dungeonLevels } = useGame();\n  return (\n    <main className={css.main}>\n      {error ? <span className={css.error}>{error}</span> : \"\"}\n\n      <AllyList />\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          gap: \"0.4rem\",\n          justifyContent: \"center\",\n        }}\n      >\n        <QuestList />\n        {/* <TravelCount /> */}\n        {/* <PlayerLvAvatar />\n        <BagOfGold gold={gold} />\n        <LevelUps lv={spareLvUps} /> */}\n      </div>\n    </main>\n  );\n};\n\nexport default TownPage;\n"],"names":["getFrame","value","type","style","undefined","css","DiceIcon","diceMax","className","getDiceTypeIcon","Miniature","padding","bgTxtFront","bgTxtBack","children","bgColor","backgroundColor","SkillSquare","name","itemId","icon","alt","tags","success","currentUses","skill","txt","id","displayCost","useState","toDispatch","editToDispatch","useCombat","inCombat","combat","dispatch","useDispatch","useEffect","runDispatch","dispatchFunc","length","url","onClick","concat","Skill","map","el","index","key","StatIcon","maxHp","fetchSkillEvaluations","sequence","state","found","getSkillEvalById","evaluation","collection","false","evaId","params","fetchSkillEvaluation","usedDices","dungeon","items","thisItem","find","i","arrayToTest","console","log","arr","singleResult","execute","diceIdArr","dices","dice","getDiceFromId","rolledDices","arrayToExecute","getSkillExecById","exec","exeId","fetchSkillExecution","funcList","deleteAllSelectedDices","useDungeonItemSkill","AllySquare","title","lv","getAlly","ALLIES","eventIcon","AllyList","list","displayed","allies","useGame","QuestSquare","item","locked","cost","ally","nondices","gold","e","preventDefault","payGold","then","result","payload","lvUpAlly","unlockItem","QUESTS_WIZARD","QUESTS_BARBARIAN","QUESTS_ROGUE","QUESTS_HUNTER","QUESTS_ARISTOCRAT","Quest","getAllyQuests","allyLv","caravanLv","dungeonLevels","amount","allyType","checkingLv","questLevels","Object","keys","checked","iteration","filtered","q","reqCaravan","Math","floor","ITEM_BASE_COST","ITEM_PER_LV_COST","push","Items","getAvailableQuests","wizard","this","barbarian","aristocrat","hunter","rogue","QuestList","wizardQuests","quests","useSelector","selectLoading","Loader","Array","isArray","TownPage","error","selectGameError","display","flexWrap","gap","justifyContent"],"sourceRoot":""}