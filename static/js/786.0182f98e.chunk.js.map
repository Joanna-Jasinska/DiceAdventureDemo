{"version":3,"file":"static/js/786.0182f98e.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/DungeonSquare/DungeonSquare.module.css?79c2","components/DungeonSquare/DungeonSquare.jsx","webpack://DiceAdventureDemo/./src/components/DungeonList/DungeonList.module.css?052a","webpack://DiceAdventureDemo/./src/components/TravelCount/TravelCount.module.css?930e","components/TravelCount/TravelCount.jsx","components/DungeonList/DungeonList.jsx","pages/QuickBattlePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DungeonSquare_item__qIj3c\",\"bar\":\"DungeonSquare_bar__zX7ka\",\"iconBag\":\"DungeonSquare_iconBag__JG6Zg\",\"button\":\"DungeonSquare_button__1IOgw\",\"selected\":\"DungeonSquare_selected__24Thy\",\"text\":\"DungeonSquare_text__iDjwK\",\"level\":\"DungeonSquare_level__Auzzp\",\"name\":\"DungeonSquare_name__9UrAj\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport css from \"./DungeonSquare.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectDungeon } from \"redux/game/operations\";\nimport { getDiceTypeIcon } from \"data/icons\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\n\nexport const DungeonSquare = ({\n  name,\n  eventName,\n  id,\n  selected = false,\n  background,\n  lv = -1,\n  weakness = false,\n  index,\n  // eventId,\n  // lvStarted,\n  // lvReached,\n  // gold,\n  // ally,\n}) => {\n  const dispatch = useDispatch();\n  const { bgColor, icon, eventIcon } = background;\n  const weaknessTypes = weakness && weakness !== undefined ? weakness : false;\n\n  const selectSelf = () => {\n    if (!selected) {\n      dispatch(setSelectDungeon(index));\n    }\n  };\n  return (\n    <div className={css.item} id={id}>\n      <Miniature\n        // url={icon}\n        alt={name}\n        bgTxtFront={eventIcon}\n        bgTxtBack={icon}\n        bgColor={bgColor}\n        // lv={lvReached}\n      />\n      <div className={css.bar}>\n        {selected === \"hide\" ? (\n          \"\"\n        ) : (\n          <button\n            key={`${name}btn${id}`}\n            className={`${css.button} ${selected ? css.selected : \"\"} ${\n              css.delete\n            }`}\n            type=\"button\"\n            onClick={selectSelf}\n          >\n            {selected ? getDiceTypeIcon(\"playerAttack\") : \"ü†ò\"}\n          </button>\n        )}\n        <span className={css.text}>\n          <span className={css.level}>{`${lv} `}</span>\n          <span className={css.name}>{`${name}\\n${eventName}`}</span>\n        </span>\n      </div>\n      <div className={css.iconBag}>\n        {weaknessTypes\n          ? weaknessTypes.map((w, index) => (\n              <DiceIcon type={w} key={`dungeonWeakness|${id}|${index}`} />\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"DungeonList_list__YK74x\"};","// extracted by mini-css-extract-plugin\nexport default {\"miniature\":\"TravelCount_miniature__PwQo0\",\"padding\":\"TravelCount_padding__YoreY\",\"count\":\"TravelCount_count__n3dUA\",\"textBoxContainer\":\"TravelCount_textBoxContainer__-24hC\",\"bgColorFront\":\"TravelCount_bgColorFront__R4kM6\",\"textBoxBack\":\"TravelCount_textBoxBack__M1Nrk\",\"textBoxSide\":\"TravelCount_textBoxSide__FGbPO\",\"imgFrame\":\"TravelCount_imgFrame__JPWxz\"};","// import { PropTypes } from \"prop-types\";\nimport css from \"./TravelCount.module.css\";\n// import { useDungeon } from \"hooks\";\n\nexport const TravelCount = ({ count }) => {\n  // const { lv, startedLv } = useDungeon();\n  // const levelsEarned = startedLv && lv ? Math.max(0, startedLv - lv) : 0;\n  const travels = count || \"‚ùî\";\n  return travels === false ? (\n    <></>\n  ) : (\n    <div className={`${css.miniature}`}>\n      <div className={`${css.imgFrame}`}>\n        <div className={css.count}>{travels}</div>\n        <div className={css.textBoxContainer}>\n          <div className={css.textBoxBack}>üèÉ</div>\n          <div className={css.textBoxSide}>üîö</div>\n          <div className={css.bgColorFront}>üê™</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n// Miniature.propTypes = {\n//   url: PropTypes.string,\n//   alt: PropTypes.string,\n//   title: PropTypes.object,\n//   padding: PropTypes.bool,\n//   bg: PropTypes.string,\n// };\n","import { DungeonSquare } from \"components/DungeonSquare/DungeonSquare\";\nimport { getDungeon } from \"data/dungeons\";\nimport { useGame } from \"hooks/useGame\";\n// import { Loader } from \"components/Loader/Loader\";\n\nimport css from \"./DungeonList.module.css\";\nimport { TravelCount } from \"components/TravelCount/TravelCount\";\nimport { Dungeon } from \"objects/Dungeon\";\nimport { JOURNEY } from \"data/journey\";\n\nexport const DungeonList = () => {\n  const { selectedDungeonId, dungeonLevels, journey } = useGame();\n  const list = Dungeon.getCurrentDungeons(journey);\n  // const list = currentDungeons;\n\n  return (\n    <div className={css.list}>\n      {!Array.isArray(list) || list.length < 1\n        ? \"\"\n        : list.map((id, index) => {\n            const dungeon = getDungeon(id);\n            const isSelected = index === selectedDungeonId ? true : false;\n            return (\n              <DungeonSquare\n                {...{\n                  ...dungeon,\n                  selected: isSelected,\n                  lv: dungeonLevels[dungeon.id],\n                  index: index,\n                  key: `dungeon|${index}|${dungeon.id}|${dungeon.eventId}`,\n                }}\n              />\n            );\n          })}\n      <TravelCount count={`${journey} /${JOURNEY.length}`} />\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","import { useSelector } from \"react-redux\";\nimport { selectGameError } from \"redux/game/selectors\";\nimport { ItemList } from \"components/ItemList/ItemList\";\nimport { DungeonList } from \"components/DungeonList/DungeonList\";\nimport css from \"./Page.module.css\";\nexport const QuickBattlePage = () => {\n  const error = useSelector(selectGameError);\n\n  return (\n    <main className={`${css.main}`}>\n      {error ? <span className={css.error}>{error}</span> : \"\"}\n      <DungeonList />\n      <ItemList filters={{ selected: true }} />\n    </main>\n  );\n};\n\nexport default QuickBattlePage;\n"],"names":["DungeonSquare","name","eventName","id","selected","background","lv","weakness","index","dispatch","useDispatch","bgColor","icon","eventIcon","weaknessTypes","undefined","className","css","Miniature","alt","bgTxtFront","bgTxtBack","type","onClick","setSelectDungeon","getDiceTypeIcon","map","w","DiceIcon","TravelCount","travels","count","DungeonList","useGame","selectedDungeonId","dungeonLevels","journey","list","Dungeon","Array","isArray","length","dungeon","getDungeon","isSelected","key","eventId","JOURNEY","QuickBattlePage","error","useSelector","selectGameError","ItemList","filters"],"sourceRoot":""}