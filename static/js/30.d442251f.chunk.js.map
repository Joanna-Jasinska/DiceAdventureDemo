{"version":3,"file":"static/js/30.d442251f.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/SkillList/SkillList.module.css?e556","components/SkillList/SkillList.jsx","components/EnemyBody/EnemyBody.js","webpack://DiceAdventureDemo/./src/components/RolledDice/RolledDice.module.css?f511","components/RolledDice/RolledDice.js","webpack://DiceAdventureDemo/./src/components/RolledDiceBag/RolledDiceBag.module.css?655e","components/RolledDiceBag/RolledDiceBag.js","pages/CombatPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SkillList_list__0NNv7\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectLoading, selectFilters } from \"redux/eq/selectors\";\nimport { SkillSquare } from \"components/SkillSquare/SkillSquare\";\nimport { updateItem } from \"redux/eq/operations\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { selectPackedItems } from \"redux/dungeon/selectors\";\nimport { useCombat, useDungeon } from \"hooks\";\nimport { Skill } from \"objects/Skill\";\nimport css from \"./SkillList.module.css\";\n\nexport const SkillList = ({ filters }) => {\n  const extraFilters = useSelector(selectFilters);\n  const { dungeon } = useDungeon();\n\n  const dispatch = useDispatch();\n  const items = useSelector(selectPackedItems);\n\n  const filterItems = (filters, items) => {\n    const filteredItems = items\n      ? Array.isArray(items)\n        ? [\n            ...items.filter((i) => {\n              return !filters.selected || i.selected === filters.selected;\n            }),\n          ]\n        : items\n      : items;\n    return filteredItems;\n  };\n  const { combat } = useCombat();\n\n  return (\n    <div className={css.list}>\n      {useSelector(selectLoading) ? (\n        <>\n          <Loader />\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {/* <Item {...items.all[0]} /> */}\n      {/* filters || extraFilters */}\n      {items\n        ? Array.isArray(items)\n          ? filterItems(filters || extraFilters, items).map((el, index) => {\n              return (\n                <SkillSquare\n                  name={`${el.name}`}\n                  alt={`${el.alt}`}\n                  itemId={`${el.itemId}`}\n                  key={`${el.name}|${el.index}|${el.id}`}\n                  // key={`key|${index}`}\n                  index={index}\n                  selected={el.selected}\n                  skill={el.skill}\n                  currentUses={el.currentUses}\n                  success={Skill.usedDices(el.itemId, { combat, dungeon })}\n                  statsTxT={el.statsTxT || \"\"}\n                  toggleSelect={() =>\n                    dispatch(\n                      updateItem({\n                        ...el,\n                        selected: !el.selected,\n                      })\n                    )\n                  }\n                  dices={el.dices}\n                  lv={el.lv}\n                />\n              );\n            })\n          : \"\"\n        : \"\"}\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","import { EnemyPiece } from \"./EnemyPiece/EnemyPiece\";\nimport css from \"./EnemyBody.module.css\";\nimport { useEnemy } from \"hooks/useEnemy\";\n\nexport const EnemyBody = () => {\n  const { body } = useEnemy();\n  const bodyTemplate = [];\n  const myBody = body ? body : bodyTemplate;\n  return (\n    <div className={css.body}>\n      {myBody.map((piece, index) => (\n        <EnemyPiece p={{ ...piece }} key={`piece|${index}|${piece.id}`} />\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"RolledDice_dice__Xm1fU\",\"removing\":\"RolledDice_removing__Si4LS\",\"appearing\":\"RolledDice_appearing__Regnw\",\"diceMaxCover\":\"RolledDice_diceMaxCover__W6mKr\",\"icon\":\"RolledDice_icon__8Q1v9\",\"physical\":\"RolledDice_physical__P4A2k\",\"magic\":\"RolledDice_magic__X8wHj\",\"elemental\":\"RolledDice_elemental__TF1bg\",\"trait\":\"RolledDice_trait__A5TtY\",\"any\":\"RolledDice_any__UQyUn\",\"notRolled\":\"RolledDice_notRolled__M8zvO\",\"selected\":\"RolledDice_selected__yikHW\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./RolledDice.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDiceSelection } from \"redux/combat/operations\";\n\n// const getColor = ({ value, diceMax = 6 }) => {\n//   //   console.log(`getting color ${value} / ${diceMax}`);\n//   if (!value || value === -1) return css.random;\n//   const percentage = (100 * value) / diceMax;\n//   if (percentage > 90) return css.full;\n//   if (percentage > 49) return css.half;\n//   return css.empty;\n// };\n\nconst getColor = ({ value, type }) => {\n  const style = !value || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const RolledDice = ({ value, diceMax, type, selected, id }) => {\n  const dispatch = useDispatch();\n  const onClick = () => {\n    dispatch(toggleDiceSelection(id));\n  };\n  return (\n    <div\n      className={`${css.dice} ${getColor({ value, diceMax, type })} ${\n        selected ? css.selected : \"\"\n      }`}\n      onClick={onClick}\n    >\n      {value || diceMax || \"?\"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n      <div className={css.diceMaxCover}>{diceMax}</div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"diceBag\":\"RolledDiceBag_diceBag__OEjoy\"};","import { useCombat } from \"hooks\";\nimport { RolledDice } from \"components/RolledDice/RolledDice\";\nimport css from \"./RolledDiceBag.module.css\";\n\nexport const RolledDiceBag = () => {\n  const { rolledDices } = useCombat();\n\n  return (\n    <div className={css.diceBag}>\n      {(rolledDices ? rolledDices : []).map((el, index) => {\n        return <RolledDice {...el} key={`rolledDice|${el.type}|${index}`} />;\n      })}\n    </div>\n  );\n};\n","// import { useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectGameError } from \"redux/game/selectors\";\nimport css from \"./Page.module.css\";\nimport { useCombat } from \"hooks\";\nimport { EnemyBody } from \"components/EnemyBody/EnemyBody\";\nimport { SkillList } from \"components/SkillList/SkillList\";\n// import { Background } from \"components/Background/Background\";\nimport { RolledDiceBag } from \"components/RolledDiceBag/RolledDiceBag\";\nimport { selectEnemyLife } from \"redux/enemy/selectors\";\nimport { selectLoading as selectDungeonLoading } from \"redux/dungeon/selectors\";\nimport { selectLoading } from \"redux/combat/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const CombatPage = () => {\n  const { inCombat } = useCombat();\n  const error = useSelector(selectGameError);\n  const enemyLife = useSelector(selectEnemyLife);\n  const dungeonLoading = useSelector(selectDungeonLoading);\n  const combatLoading = useSelector(selectLoading);\n\n  return inCombat === \"summary\" ? (\n    <Navigate to=\"/summary\" />\n  ) : dungeonLoading || combatLoading ? (\n    <Loader />\n  ) : (\n    <main className={css.main}>\n      {error ? <span className={css.error}>{error}</span> : \"\"}\n      {\n        !inCombat ? (\n          <Navigate to=\"/dungeon\" />\n        ) : enemyLife < 1 ? (\n          <Navigate to=\"/return\" />\n        ) : (\n          <>\n            {/* <Background /> */}\n            {/* <AAATester /> */}\n            {/* <Title title={`Combat`} /> */}\n            {/* <Title title={`Lv.${lv} ${dungeonName} ${dungeonEvName}`} /> */}\n            {/* <EnemyPortrait /> */}\n\n            <EnemyBody />\n            <RolledDiceBag />\n            <SkillList />\n          </>\n        ) // end of combat page\n      }\n    </main>\n  );\n};\n\nexport default CombatPage;\n"],"names":["SkillList","filters","extraFilters","useSelector","selectFilters","dungeon","useDungeon","dispatch","useDispatch","items","selectPackedItems","combat","useCombat","className","css","selectLoading","Loader","Array","isArray","filter","i","selected","filterItems","map","el","index","SkillSquare","name","alt","itemId","skill","currentUses","success","Skill","statsTxT","toggleSelect","updateItem","dices","lv","id","EnemyBody","body","useEnemy","myBody","piece","EnemyPiece","p","getColor","value","type","style","RolledDice","diceMax","onClick","toggleDiceSelection","getDiceTypeIcon","RolledDiceBag","rolledDices","key","CombatPage","inCombat","error","selectGameError","enemyLife","selectEnemyLife","dungeonLoading","selectDungeonLoading","combatLoading","to"],"sourceRoot":""}