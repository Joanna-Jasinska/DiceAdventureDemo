{"version":3,"file":"static/js/650.8cff9154.chunk.js","mappings":"yKACA,GAAgB,KAAO,4BAA4B,IAAM,2BAA2B,QAAU,+BAA+B,OAAS,8BAA8B,SAAW,gCAAgC,KAAO,4BAA4B,MAAQ,6BAA6B,KAAO,6B,kDCOjRA,EAAgB,SAAC,GAavB,IAZLC,EAYI,EAZJA,KACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,GAUI,IATJC,SAAAA,OASI,SARJC,EAQI,EARJA,WAQI,IAPJC,GAAAA,OAOI,OAPE,EAOF,MANJC,SAAAA,OAMI,SACEC,GAAWC,EAAAA,EAAAA,MACTC,EAA6BL,EAA7BK,QAASC,EAAoBN,EAApBM,KAAMC,EAAcP,EAAdO,UACjBC,KAAgBN,QAAyBO,IAAbP,IAAyBA,EAO3D,OACE,iBAAKQ,UAAWC,EAAAA,KAAUb,GAAIA,EAA9B,WACE,SAACc,EAAA,EAAD,CAEEC,IAAKjB,EACLkB,WAAYP,EACZQ,UAAWT,EACXD,QAASA,KAGX,iBAAKK,UAAWC,EAAAA,IAAhB,UACgB,SAAbZ,EACC,IAEA,mBAEEW,UAAS,UAAKC,EAAAA,OAAL,YAAmBZ,EAAWY,EAAAA,SAAe,GAA7C,YACPA,EAAAA,QAEFK,KAAK,SACLC,QAzBS,WACZlB,GACHI,GAASe,EAAAA,EAAAA,IAAiBpB,GAE7B,EAeO,SAQGC,GAAWoB,EAAAA,EAAAA,IAAgB,gBAAkB,gBARhD,UACUvB,EADV,cACoBE,KAUtB,kBAAMY,UAAWC,EAAAA,KAAjB,WACE,iBAAMD,UAAWC,EAAAA,MAAjB,mBAAgCV,EAAhC,QACA,iBAAMS,UAAWC,EAAAA,KAAjB,mBAA+Bf,EAA/B,YAAuCC,YAG3C,gBAAKa,UAAWC,EAAAA,QAAhB,SACGH,EACGA,EAAcY,KAAI,SAACC,EAAGC,GAAJ,OAChB,SAACC,EAAA,EAAD,CAAUP,KAAMK,GAAhB,0BAA2CvB,EAA3C,YAAiDwB,GADjC,IAGlB,OAIX,C,iLCrED,EAAuB,0B,UCMVE,EAAc,WACzB,OAA8DC,EAAAA,EAAAA,KAAtDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,kBAAmBC,EAA5C,EAA4CA,cACtCC,EAAOH,EAEb,OACE,gBAAKhB,UAAWC,EAAhB,UACImB,MAAMC,QAAQF,IAASA,EAAKG,OAAS,EACnC,GACAH,EAAKT,KAAI,SAACtB,EAAIwB,GACZ,IAAMW,GAAUC,EAAAA,EAAAA,GAAWpC,GACrBqC,EAAaF,EAAQnC,KAAO6B,EAClC,OACE,SAAChC,EAAA,GAAD,6BAEOsC,GAFP,IAGIlC,SAAUoC,EACVlC,GAAI2B,EAAcK,EAAQnC,IAC1BsC,IAAI,WAAD,OAAad,EAAb,YAAsBW,EAAQnC,GAA9B,YAAoCmC,EAAQI,YAItD,KAGV,E,UC1BYC,EAAkB,WAC7B,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACE,kBAAM/B,UAAS,UAAKC,EAAAA,EAAAA,MAApB,UACG4B,GAAQ,iBAAM7B,UAAWC,EAAAA,EAAAA,MAAjB,SAA6B4B,IAAgB,IACtD,SAACf,EAAD,KACA,SAACkB,EAAA,EAAD,CAAUC,QAAS,CAAE5C,UAAU,OAGpC,EAED,G","sources":["webpack://DiceAdventureDemo/./src/components/DungeonSquare/DungeonSquare.module.css?79c2","components/DungeonSquare/DungeonSquare.jsx","webpack://DiceAdventureDemo/./src/components/DungeonList/DungeonList.module.css?052a","components/DungeonList/DungeonList.jsx","pages/QuickBattlePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DungeonSquare_item__qIj3c\",\"bar\":\"DungeonSquare_bar__zX7ka\",\"iconBag\":\"DungeonSquare_iconBag__JG6Zg\",\"button\":\"DungeonSquare_button__1IOgw\",\"selected\":\"DungeonSquare_selected__24Thy\",\"text\":\"DungeonSquare_text__iDjwK\",\"level\":\"DungeonSquare_level__Auzzp\",\"name\":\"DungeonSquare_name__9UrAj\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport css from \"./DungeonSquare.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectDungeon } from \"redux/game/operations\";\nimport { getDiceTypeIcon } from \"data/icons\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\n\nexport const DungeonSquare = ({\n  name,\n  eventName,\n  id,\n  selected = false,\n  background,\n  lv = -1,\n  weakness = false,\n  // eventId,\n  // lvStarted,\n  // lvReached,\n  // gold,\n  // ally,\n}) => {\n  const dispatch = useDispatch();\n  const { bgColor, icon, eventIcon } = background;\n  const weaknessTypes = weakness && weakness !== undefined ? weakness : false;\n\n  const selectSelf = () => {\n    if (!selected) {\n      dispatch(setSelectDungeon(id));\n    }\n  };\n  return (\n    <div className={css.item} id={id}>\n      <Miniature\n        // url={icon}\n        alt={name}\n        bgTxtFront={eventIcon}\n        bgTxtBack={icon}\n        bgColor={bgColor}\n        // lv={lvReached}\n      />\n      <div className={css.bar}>\n        {selected === \"hide\" ? (\n          \"\"\n        ) : (\n          <button\n            key={`${name}btn${id}`}\n            className={`${css.button} ${selected ? css.selected : \"\"} ${\n              css.delete\n            }`}\n            type=\"button\"\n            onClick={selectSelf}\n          >\n            {selected ? getDiceTypeIcon(\"playerAttack\") : \"ðŸ ˜\"}\n          </button>\n        )}\n        <span className={css.text}>\n          <span className={css.level}>{`${lv} `}</span>\n          <span className={css.name}>{`${name} ${eventName}`}</span>\n        </span>\n      </div>\n      <div className={css.iconBag}>\n        {weaknessTypes\n          ? weaknessTypes.map((w, index) => (\n              <DiceIcon type={w} key={`dungeonWeakness|${id}|${index}`} />\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"DungeonList_list__YK74x\"};","import { DungeonSquare } from \"components/DungeonSquare/DungeonSquare\";\nimport { getDungeon } from \"data/dungeons\";\nimport { useGame } from \"hooks/useGame\";\n// import { Loader } from \"components/Loader/Loader\";\n\nimport css from \"./DungeonList.module.css\";\n\nexport const DungeonList = () => {\n  const { currentDungeons, selectedDungeonId, dungeonLevels } = useGame();\n  const list = currentDungeons;\n\n  return (\n    <div className={css.list}>\n      {!Array.isArray(list) || list.length < 1\n        ? \"\"\n        : list.map((id, index) => {\n            const dungeon = getDungeon(id);\n            const isSelected = dungeon.id === selectedDungeonId ? true : false;\n            return (\n              <DungeonSquare\n                {...{\n                  ...dungeon,\n                  selected: isSelected,\n                  lv: dungeonLevels[dungeon.id],\n                  key: `dungeon|${index}|${dungeon.id}|${dungeon.eventId}`,\n                }}\n              />\n            );\n          })}\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","import { useSelector } from \"react-redux\";\nimport { selectGameError } from \"redux/game/selectors\";\nimport { ItemList } from \"components/ItemList/ItemList\";\nimport { DungeonList } from \"components/DungeonList/DungeonList\";\nimport css from \"./Page.module.css\";\nexport const QuickBattlePage = () => {\n  const error = useSelector(selectGameError);\n\n  return (\n    <main className={`${css.main}`}>\n      {error ? <span className={css.error}>{error}</span> : \"\"}\n      <DungeonList />\n      <ItemList filters={{ selected: true }} />\n    </main>\n  );\n};\n\nexport default QuickBattlePage;\n"],"names":["DungeonSquare","name","eventName","id","selected","background","lv","weakness","dispatch","useDispatch","bgColor","icon","eventIcon","weaknessTypes","undefined","className","css","Miniature","alt","bgTxtFront","bgTxtBack","type","onClick","setSelectDungeon","getDiceTypeIcon","map","w","index","DiceIcon","DungeonList","useGame","currentDungeons","selectedDungeonId","dungeonLevels","list","Array","isArray","length","dungeon","getDungeon","isSelected","key","eventId","QuickBattlePage","error","useSelector","selectGameError","ItemList","filters"],"sourceRoot":""}