{"version":3,"file":"static/js/374.7a983aa8.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/DiceIcon/DiceIcon.module.css?7f0e","components/DiceIcon/DiceIcon.js","objects/Actions.js","components/EnemyBody/EnemyPiece/EnemyPiece.js","webpack://DiceAdventureDemo/./src/components/EnemyBody/EnemyPiece/PieceIcon/PieceIcon.module.css?302a","components/EnemyBody/EnemyPiece/PieceIcon/PieceIcon.js","webpack://DiceAdventureDemo/./src/components/ContainerHorisontal/ContainerHorisontal.module.css?66a4","components/ContainerHorisontal/ContainerHorisontal.jsx","pages/TutorialPage.js","webpack://DiceAdventureDemo/./src/components/EnemyBody/EnemyBody.module.css?0d90"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"DiceIcon_dice__mzHqX\",\"icon\":\"DiceIcon_icon__Rr08e\",\"physical\":\"DiceIcon_physical__yV2lY\",\"magic\":\"DiceIcon_magic__15Bfj\",\"elemental\":\"DiceIcon_elemental__B0alV\",\"trait\":\"DiceIcon_trait__fPQ3I\",\"any\":\"DiceIcon_any__f-UYu\",\"notRolled\":\"DiceIcon_notRolled__oeujV\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./DiceIcon.module.css\";\n\nconst getFrame = ({ value, type }) => {\n  const style = value === undefined || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"trait\":\n      return `${style}${css.trait}`;\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const DiceIcon = ({ value, diceMax, type }) => {\n  return (\n    <div className={`${css.dice} ${getFrame({ value, type })}`}>\n      {value || diceMax || \" \"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","import {\n  deleteAllPieceDices,\n  placeBodyPieceDice,\n} from \"redux/enemy/operations\";\nimport { Piece } from \"./Piece\";\nimport {\n  addMultipleRolledDice,\n  deleteRolledDice,\n} from \"redux/combat/operations\";\n\nexport const Actions = {\n  // -----------------------------------------------------------------------------\n  clickOnBodyPiece(piecee, rolledDices) {\n    const piece = JSON.parse(JSON.stringify(piecee));\n    // console.log(`clickOnBodyPiece`);\n    const toDispatch = [];\n    const foundRD = rolledDices;\n    const bag =\n      foundRD && Array.isArray(foundRD) && foundRD.length > 0 ? foundRD : false;\n    const foundSD = !!foundRD ? foundRD.filter((dice) => dice.selected) : false;\n    const selectedDices =\n      foundSD && Array.isArray(foundSD) && foundSD.length > 0 ? foundSD : false;\n    const pieceDices =\n      piece.dices && Array.isArray(piece.dices) && piece.dices.length > 0\n        ? piece.dices\n        : false;\n\n    const returnAllPieceDicesToBag = () => {\n      // console.log(`Returning all piece dices to bag`);\n      let diceArray = [];\n      piece.dices.forEach((d) => {\n        diceArray.push(d);\n      });\n      if (diceArray.length > 0) {\n        toDispatch.push(() => addMultipleRolledDice(diceArray));\n        toDispatch.push(() => deleteAllPieceDices(piece.id));\n        // console.log(`Actions.returnAllPieceDicesToBag, piece.id: `, piece.id);\n        // console.log(\n        //   `Actions.returnAllPieceDicesToBag, dispatched: `,\n        //   toDispatch\n        // );\n        return toDispatch;\n      }\n    };\n    // !!!AAA!!! find out if piece can fill any more dices by piece.allows.maxDices\n    if (pieceDices && (piece.disabled || piece.fulfilled)) {\n      returnAllPieceDicesToBag();\n      return toDispatch;\n    }\n    const findFirstAllowedDice = (piece, diceArray) => {\n      let firstAllowedDice = false;\n      for (let i = diceArray.length; i > 0; i--) {\n        const thisDice = diceArray[i - 1];\n        if (Piece.diceIsAllowed(piece, thisDice)) {\n          firstAllowedDice = { ...thisDice };\n          i = 0;\n        }\n      }\n      return firstAllowedDice;\n    };\n    if (bag) {\n      if (selectedDices) {\n        const firstAllowedDice = findFirstAllowedDice(piece, selectedDices);\n        if (firstAllowedDice) {\n          toDispatch.push(() =>\n            placeBodyPieceDice({ pieceId: piece.id, dice: firstAllowedDice })\n          );\n          toDispatch.push(() => deleteRolledDice(firstAllowedDice));\n          console.log(`Added ${firstAllowedDice.id} to ${piece.id}`);\n          return toDispatch;\n        } else {\n          // have selected dices but none of them can be placed in\n          // for now do nothing !!!OPTION!!!\n          return toDispatch;\n        }\n      }\n\n      ////// have [NO] selected dices\n      const firstAllowedDice = findFirstAllowedDice(piece, bag);\n      if (firstAllowedDice) {\n        toDispatch.push(() =>\n          placeBodyPieceDice({ pieceId: piece.id, dice: firstAllowedDice })\n        );\n        toDispatch.push(() => deleteRolledDice(firstAllowedDice));\n        console.log(`Added ${firstAllowedDice.id} to ${piece.id}`);\n        return toDispatch;\n      } else {\n        returnAllPieceDicesToBag();\n        return toDispatch;\n      }\n    }\n\n    if (pieceDices) {\n      returnAllPieceDicesToBag();\n      return toDispatch;\n    }\n\n    return [];\n  },\n  // -----------------------------------------------------------------------------\n};\n","import { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport css from \"./../EnemyBody.module.css\";\nimport { Actions } from \"objects/Actions\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useCombat } from \"hooks\";\nimport { Piece } from \"objects/Piece\";\nimport { PieceIcon } from \"./PieceIcon/PieceIcon\";\n\nexport const EnemyPiece = ({ p }) => {\n  const dispatch = useDispatch();\n  const { rolledDices } = useCombat();\n  const [toDispatch, editToDispatch] = useState([]);\n  const damageIcons = Piece.getDmgIcons(p);\n  const requiredIcons = Piece.getReqIcons(p);\n  // const allowedTypes = p.allows ? (p.allows.types ? p.allows.types : []) : [];\n  const weaknessTypes = p.weakness ? p.weakness : [];\n\n  const onDiceHolderClick = () => {\n    editToDispatch([\n      ...toDispatch.concat(Actions.clickOnBodyPiece(p, rolledDices)),\n    ]);\n    // ;\n  };\n\n  useEffect(() => {\n    const runDispatch = async () => {\n      for (const dispatchFunc of toDispatch) {\n        await dispatch(dispatchFunc());\n      }\n      editToDispatch([]);\n    };\n\n    if (toDispatch.length > 0) {\n      runDispatch();\n    }\n  }, [toDispatch, dispatch]);\n\n  return (\n    <div\n      className={`${css.piece} ${\n        p.fulfilled ? css.fulfilled : p.disabled ? css.disabled : css.waiting\n      }`}\n    >\n      <div className={css.leftHolder}>\n        {!weaknessTypes\n          ? \"\"\n          : weaknessTypes.map((type, index) =>\n              type === \"any\" ? (\n                \"\"\n              ) : (\n                <DiceIcon\n                  type={type}\n                  value={``}\n                  key={`weaknessDiceType|${p.id}|${type}${index}`}\n                />\n              )\n            )}\n        {/* {!allowedTypes\n          ? \"\"\n          : allowedTypes.map((type, index) =>\n              type === \"any\" ? (\n                \"\"\n              ) : (\n                <DiceIcon\n                  type={type}\n                  value={``}\n                  key={`allowedDiceType|${p.id}|${type}${index}`}\n                  // onClick={() => console.log(`[${type}]`)}\n                />\n              )\n            )} */}\n      </div>\n\n      <div className={css.middleContainer} onClick={onDiceHolderClick}>\n        <div className={css.displayedBodyPart}>{p.bodyPartIcon}</div>\n        <div className={css.diceHolder}>\n          {p.dices\n            ? p.dices.map((dice, index) => (\n                <DiceIcon {...dice} key={`pieceDice|${dice.type}|${index}`} />\n              ))\n            : \"\"}\n        </div>\n        <div className={css.requiredHolder}>\n          <div className={css.req}></div>\n          {requiredIcons\n            ? requiredIcons.map((i, index) => (\n                <PieceIcon {...i} key={`pieceIcon|${p.id}|${index}`} />\n              ))\n            : \"\"}\n        </div>\n      </div>\n      <div className={css.damageHolder}>\n        {damageIcons\n          ? damageIcons.map((i, index) => (\n              <div className={css.dmg} key={`${p.id}|dmgIcon|${index}`}>\n                {i}\n              </div>\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"PieceIcon_dice__ZzvQe\",\"icon\":\"PieceIcon_icon__g4BoE\",\"allowed\":\"PieceIcon_allowed__OR7Se\",\"glowing\":\"PieceIcon_glowing__h3PK-\",\"neutral\":\"PieceIcon_neutral__gwSdE\",\"required\":\"PieceIcon_required__vrTY5\"};","import css from \"./PieceIcon.module.css\";\n\nconst getColor = ({ required, allowed }) => {\n  if (required) return css.required;\n  if (allowed) return css.allowed;\n  return css.neutral;\n};\n\nexport const PieceIcon = ({ value, required, allowed }) => {\n  return (\n    <div className={`${css.dice} ${getColor({ required, allowed })}`}>\n      {`${value || \" \"}`}\n      <span className={css.icon}> </span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContainerHorisontal_container__OAugh\"};","import css from \"./ContainerHorisontal.module.css\";\nexport const ContainerHorisontal = (props) => {\n  return <div className={`${css.container}`}>{props.children}</div>;\n};\n","import { Title } from \"components/Title/Title\";\nimport { HeaderNavBtn } from \"components/HeaderNavBtn/HeaderNavBtn\";\nimport { EnemyPiece } from \"components/EnemyBody/EnemyPiece/EnemyPiece\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport { ContainerHorisontal } from \"components/ContainerHorisontal/ContainerHorisontal\";\nimport { getDiceTypeIcon } from \"data/icons\";\nimport { PieceIcon } from \"components/EnemyBody/EnemyPiece/PieceIcon/PieceIcon\";\nimport { Piece } from \"objects/Piece\";\nimport css from \"./Page.module.css\";\n\nexport const TutorialPage = () => {\n  const exampleEPiece1 = {\n    // priority: true, //priority, extra, keep, once\n    bodyPartIcon: \"🐭\",\n    bodyPartTypes: [\"head\", \"body\"],\n    id: \"piece|ANIMALS|purple|Mutated Rat|head|1\",\n    // weakness: [\"physical\"],\n    damages: {\n      damageToPlayer: 1,\n      damageToEnemy: 1,\n      // effectsToPlayer: false,// effectsToEnemy: false,\n    },\n    allows: {\n      // types: [\"any\"],\n      // minValue: 4,\n      // maxValue: 4,\n      // exactValues: [\"even\"],\n      // maxDices: false,\n    },\n    requires: {\n      // exactValues: false,\n      // minDices: 1,\n      minSum: 4,\n    },\n    grow: {\n      // duplicateAtLv: 32,\n      lvlsToRaiseMinSum: 1,\n      // lvlsToRaiseMinDices: 12,\n      // lvlsToRaiseExactValues: 17,\n      // lvlsToRaiseMinValue: 35,\n    },\n  };\n  const exampleEPiece2 = {\n    // priority: true, //priority, extra, keep, once\n    bodyPartIcon: \"🐭\",\n    bodyPartTypes: [\"head\", \"body\"],\n    id: \"piece|ANIMALS|purple|Mutated Rat|head|1\",\n    weakness: [\"physical\"],\n    damages: {\n      // damageToPlayer: 1,\n      // damageToEnemy: 1,\n    },\n    allows: {\n      // minValue: 4,\n    },\n    requires: {\n      minDices: 1,\n      minSum: 7,\n    },\n  };\n  const redRequirements = {\n    requires: {\n      // exactValues: false,\n      minDices: 1,\n      minSum: 4,\n    },\n    allows: {},\n  };\n  const greenRequirements = {\n    allows: {\n      minValue: 2,\n      maxValue: 6,\n      maxDices: 4,\n    },\n    requires: {},\n  };\n  // const error = useSelector(selectGameError);\n  return (\n    <main className={`${css.main} ${css.center}`}>\n      {/* {error ? <span className={css.error}>{error}</span> : \"\"} */}\n      <HeaderNavBtn\n        to=\"/\"\n        display=\"🏃 Homepage\"\n        // completed={true}\n        // disabled={true}\n        // warning={true}\n        recommended={true}\n      />\n      <Title title=\"Dice Adventure Demo\" />\n\n      <h4 id=\"story\">Introduction</h4>\n      <ContainerHorisontal>\n        Rajavi believe that salvation will be found at the end of world.\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        So their home is a caravan constantly moving towards neverchanging\n        direction.\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        To live and travel they pull resources from nearby locations by trade,\n        performing services and sometimes even using force when they have to.\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        You are one of the few Rajavi elite Pathforcers.\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        Your task is trading, bargaining, performing, fighting.. - doing\n        everything to make sure nothing stands on the way of Rajavi caravan on\n        their way to salvation.\n      </ContainerHorisontal>\n      <h4 id=\"notice\">Notice</h4>\n      <ContainerHorisontal>\n        Game is stored on your local browser data of THIS specific device.{\" \"}\n        <br />\n        Cannot be transfered to a different device. <br />\n        You can close or refresh browser tab as you see fit and Your game\n        progress will be saved exactly where you left it.\n      </ContainerHorisontal>\n      <h4 id=\"tutorial\">Tutorial</h4>\n      <ContainerHorisontal>\n        Path\n        <br /> There are 5 Paths to explore.\n        <br />\n        To progress the game on selected Path choose{\" \"}\n        {`Go${getDiceTypeIcon(\"playerAttack\")}`}.\n        <br />\n        Whenever you come back from a Path - you bring back gold and levelups\n        you earned.\n        <br />\n        To progress a path to next Level and gain a levelup you need to win all\n        available adventures there.\n        <br />\n        Once you progress path to next level all gold you will be earning since\n        then is doubled - until you leave path and go back to caravan.\n        <HeaderNavBtn\n          to=\"/dungeon\"\n          display={`Go${getDiceTypeIcon(\"playerAttack\")}`}\n          // display={`Go${getDiceTypeIcon(\"playerAttack\")}`}\n          onClick={(e) => e.preventDefault()}\n          // inactive={true}\n          recommended={true}\n          styles={{ whiteSpace: \"nowrap\" }}\n        />\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        Caravan\n        <br />\n        When the Caravan is ready, MOVE the caravan to discover new paths.\n        <br />\n        (Caravan moving added in future)\n      </ContainerHorisontal>\n      <h4 id=\"tutorial\">Equipment and Skills</h4>\n      <ContainerHorisontal>\n        Equipment <br />\n        Equipped items give you dices and life during your adventure.\n        <br />\n        When on the Path you must have 1-5 items equipped with you.\n        <br />\n        All equipment can be leveled up and down as you please at the caravan\n        🔨, however deleveling items costs a little bit of gold.\n        <br />\n        Once you get an item it is Yours forever.\n        <HeaderNavBtn\n          to=\"/-\"\n          display={`🔨`}\n          onClick={(e) => e.preventDefault()}\n        />\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        Skills <br />\n        Each equipment has its unique skill.\n        <br />\n        When on the Path - each Skill can be used once per turn.\n        <br /> When Skill is ready to activate - it will glow with green aura.\n        <br /> To activate skill first select exactly as many dices as the skill\n        requires\n        <br /> - then click on the Skill.\n      </ContainerHorisontal>\n      <h4 id=\"path\">When on the Path</h4>\n      <ContainerHorisontal>\n        You will be using dices like these.\n        <br />\n        To choose which dice you want to place first\n        <br /> SELECT a dice by clicking on it.\n        <span>\n          <DiceIcon\n            type={\"strength\"}\n            value={`6`}\n            key={`tutorial|strength6|1`}\n          />\n          <DiceIcon type={\"slashed\"} value={`7`} key={`tutorial|slashed7|1`} />\n          <DiceIcon type={\"mana\"} value={`2`} key={`tutorial|mana2|1`} />\n          <DiceIcon type={\"ice\"} value={`4`} key={`tutorial|ice4|1`} />\n        </span>\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        Place dices inside MIDDLE (squre-ish) section\n        <br /> of special boxes like this one - by clicking inside.\n        <br />\n        Some dices may not fit inside a particular box.\n        <EnemyPiece p={exampleEPiece1} />\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        What can happen at the end of turn is shown on the RIGHT side of each\n        box:\n        <br />\n        {getDiceTypeIcon(\"life\")} damage to you <br />\n        {getDiceTypeIcon(\"playerAttack\")} your progress towards victory\n        <HeaderNavBtn\n          to=\"/-\"\n          display={`✔️End Turn`}\n          onClick={(e) => e.preventDefault()}\n          recommended={true}\n          styles={{ whiteSpace: \"nowrap\" }}\n        />\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        Some boxes remain LOCKED until you filfill requirements of other boxes.\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        RED are REQUIREMENTS you need to fulfill\n        <br /> to APPLY{getDiceTypeIcon(\"playerAttack\")} and PREVENT\n        {getDiceTypeIcon(\"life\")} when turn ends\n        {Piece.getReqIcons(redRequirements).map((i, index) => (\n          <PieceIcon {...i} key={`redRequirements|${index}`} />\n        ))}\n        <br />\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        GREEN are REQUIREMENTS for a single dice\n        <br /> to even be placed inside the box\n        {Piece.getReqIcons(greenRequirements).map((i, index) => (\n          <PieceIcon {...i} key={`greenRequirements|${index}`} />\n        ))}\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        GREEN requirements can be IGNORED when you are trying to place dice of\n        same symbol as on LEFT side of the box. Not all boxes have that option.\n        <EnemyPiece p={exampleEPiece2} />\n      </ContainerHorisontal>\n      <h4 id=\"details\">More details</h4>\n      <ContainerHorisontal>\n        <PieceIcon\n          {...{ value: \"3+\", required: true }}\n          key={`sumRequirements`}\n        />\n        total value of dices inside <br />\n        example: 3+ can be fulfilled by [3] or [1][2] or [5], etc\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        <PieceIcon\n          {...{ value: \"x4\", required: true }}\n          key={`sumRequirements`}\n        />\n        amount of dices inside\n        <br />\n        example: 4x needs four dices inside\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        <PieceIcon\n          {...{ value: \"2+\", allowed: true }}\n          key={`sumRequirements`}\n        />\n        minimum value of dice <br />\n        example: with 2+ only dices with value 2 or higher can be placed inside\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        <PieceIcon\n          {...{ value: \"-5\", allowed: true }}\n          key={`sumRequirements`}\n        />\n        maximum value of dice <br />\n        example: with -5 only dices with value 5 or lower can be placed inside\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        <PieceIcon\n          {...{ value: \"3-6\", allowed: true }}\n          key={`sumRequirements`}\n        />\n        minimum and maximum together\n        <br />\n        example: with 3-6 only dices with values [3] [4] [5] and [6] can be\n        placed inside\n      </ContainerHorisontal>\n      <ContainerHorisontal>\n        <PieceIcon\n          {...{ value: \"-2x\", allowed: true }}\n          key={`sumRequirements`}\n        />\n        maximum amount of dices <br />\n        example: with -2x only two dices (or less) can be inside at the time\n      </ContainerHorisontal>\n    </main>\n  );\n};\n\nexport default TutorialPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"EnemyBody_body__SNMRT\",\"piece\":\"EnemyBody_piece__m6sgA\",\"middleContainer\":\"EnemyBody_middleContainer__tatOZ\",\"displayedBodyPart\":\"EnemyBody_displayedBodyPart__94tgg\",\"leftHolder\":\"EnemyBody_leftHolder__mO2A4\",\"damageHolder\":\"EnemyBody_damageHolder__veb4+\",\"modifier\":\"EnemyBody_modifier__KoRSl\",\"x2\":\"EnemyBody_x2__fVl44\",\"requiredHolder\":\"EnemyBody_requiredHolder__6QNCW\",\"diceHolder\":\"EnemyBody_diceHolder__+wfoq\",\"dmg\":\"EnemyBody_dmg__ECDC4\",\"disabled\":\"EnemyBody_disabled__aLzAg\",\"fulfilled\":\"EnemyBody_fulfilled__vmh42\",\"waiting\":\"EnemyBody_waiting__XT6PA\"};"],"names":["getFrame","value","type","style","undefined","css","DiceIcon","diceMax","className","getDiceTypeIcon","Actions","piecee","rolledDices","piece","JSON","parse","stringify","toDispatch","foundRD","bag","Array","isArray","length","foundSD","filter","dice","selected","selectedDices","pieceDices","dices","returnAllPieceDicesToBag","diceArray","forEach","d","push","addMultipleRolledDice","deleteAllPieceDices","id","disabled","fulfilled","findFirstAllowedDice","firstAllowedDice","i","thisDice","Piece","placeBodyPieceDice","pieceId","deleteRolledDice","console","log","EnemyPiece","p","dispatch","useDispatch","useCombat","useState","editToDispatch","damageIcons","requiredIcons","weaknessTypes","weakness","useEffect","runDispatch","dispatchFunc","map","index","onClick","concat","bodyPartIcon","key","PieceIcon","getColor","required","allowed","ContainerHorisontal","props","children","TutorialPage","HeaderNavBtn","to","display","recommended","Title","title","e","preventDefault","styles","whiteSpace","bodyPartTypes","damages","damageToPlayer","damageToEnemy","allows","requires","minSum","grow","lvlsToRaiseMinSum","minDices","minValue","maxValue","maxDices"],"sourceRoot":""}