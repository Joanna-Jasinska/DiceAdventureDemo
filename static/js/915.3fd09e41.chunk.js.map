{"version":3,"file":"static/js/915.3fd09e41.chunk.js","mappings":"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","sources":["webpack://DiceAdventureDemo/./src/components/DiceIcon/DiceIcon.module.css?7f0e","components/DiceIcon/DiceIcon.js","webpack://DiceAdventureDemo/./src/components/Item/Item.module.css?bac0","components/Item/Item.jsx","webpack://DiceAdventureDemo/./src/components/ItemList/ItemList.module.css?231b","components/ItemList/ItemList.jsx","webpack://DiceAdventureDemo/./src/components/Miniature/Miniature.module.css?652d","components/Miniature/Miniature.jsx","webpack://DiceAdventureDemo/./src/components/SkillSquare/SkillSquare.module.css?bc81","components/SkillSquare/SkillSquare.jsx","webpack://DiceAdventureDemo/./src/components/StatIcon/StatIcon.module.css?e029","components/StatIcon/StatIcon.js","data/skillEvaluation/skillEvaluation.js","objects/Skill.js","data/skillsExecution/skillExecution.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dice\":\"DiceIcon_dice__mzHqX\",\"icon\":\"DiceIcon_icon__Rr08e\",\"physical\":\"DiceIcon_physical__yV2lY\",\"magic\":\"DiceIcon_magic__15Bfj\",\"elemental\":\"DiceIcon_elemental__B0alV\",\"trait\":\"DiceIcon_trait__fPQ3I\",\"any\":\"DiceIcon_any__f-UYu\",\"notRolled\":\"DiceIcon_notRolled__oeujV\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./DiceIcon.module.css\";\n\nconst getFrame = ({ value, type }) => {\n  const style = value === undefined || value === -1 ? `${css.notRolled} ` : \"\";\n  switch (type) {\n    case \"any\":\n      return `${style}${css.any}`;\n    case \"physical\":\n      return `${style}${css.physical}`;\n    case \"slashed\":\n      return `${style}${css.physical}`;\n    case \"smashed\":\n      return `${style}${css.physical}`;\n    case \"needle\":\n      return `${style}${css.physical}`;\n\n    case \"mana\":\n      return `${style}${css.magic}`;\n    case \"magic\":\n      return `${style}${css.magic}`;\n    case \"arcane\":\n      return `${style}${css.magic}`;\n    case \"toxic\":\n      return `${style}${css.magic}`;\n    case \"void\":\n      return `${style}${css.magic}`;\n    case \"rainbow\":\n      return `${style}${css.magic}`;\n\n    case \"elemental\":\n      return `${style}${css.elemental}`;\n    case \"heat\":\n      return `${style}${css.elemental}`;\n    case \"ice\":\n      return `${style}${css.elemental}`;\n    case \"shock\":\n      return `${style}${css.elemental}`;\n    case \"poison\":\n      return `${style}${css.elemental}`;\n\n    case \"trait\":\n      return `${style}${css.trait}`;\n    case \"speed\":\n      return `${style}${css.trait}`;\n    case \"strength\":\n      return `${style}${css.trait}`;\n    case \"dexterity\":\n      return `${style}${css.trait}`;\n    case \"perception\":\n      return `${style}${css.trait}`;\n    case \"wits\":\n      return `${style}${css.trait}`;\n    case \"stamina\":\n      return `${style}${css.trait}`;\n\n    default:\n      return `${style}${css.any}`;\n  }\n};\n\nexport const DiceIcon = ({ value, diceMax, type }) => {\n  return (\n    <div className={`${css.dice} ${getFrame({ value, type })}`}>\n      {value || diceMax || \" \"}{\" \"}\n      <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Item_item__YyyIm\",\"bar\":\"Item_bar__5NIYP\",\"iconBag\":\"Item_iconBag__Pq6sx\",\"button\":\"Item_button__vR7wy\",\"selected\":\"Item_selected__LMHTu\",\"text\":\"Item_text__hVxLa\",\"level\":\"Item_level__MSptr\",\"name\":\"Item_name__Fc6QL\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport css from \"./Item.module.css\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport { StatIcon } from \"components/StatIcon/StatIcon\";\nimport { SkillSquare } from \"components/SkillSquare/SkillSquare\";\n\nexport const Item = ({\n  name,\n  id,\n  icon,\n  alt,\n  tags = [\"\"],\n  lv = 1,\n  selected = false,\n  toggleSelect,\n  dices,\n  nondices,\n  stats = [],\n  skill = { name: \"NO SKILL\", txt: \"-\", id: \"noskill\" },\n  // statsTxT,\n}) => {\n  return (\n    <div className={css.item} id={id}>\n      <Miniature\n        url={icon}\n        alt={alt || name}\n        bgTxtFront={alt}\n        bgTxtBack={tags[0]}\n        children={<SkillSquare skill={skill} />}\n      />\n      <div className={css.bar}>\n        <button\n          key={`${name}btn${id}`}\n          className={`${css.button} ${selected ? css.selected : \"\"} ${\n            css.delete\n          }`}\n          type=\"button\"\n          onClick={toggleSelect}\n        >\n          {selected ? \"✔️\" : \"+\"}\n        </button>\n        <span className={css.text}>\n          <span className={css.level}>{`${lv} `}</span>\n          <span className={css.name}>{name + \" \"}</span>\n        </span>\n      </div>\n      <div className={css.iconBag}>\n        {(nondices ? nondices : []).map((el, index) => {\n          return (\n            <StatIcon\n              {...el}\n              // diceMax={el.diceMax}\n              // value={el.value}\n              // icon={el.type}\n              key={`${name}|${el.type}|${index}`}\n            />\n          );\n        })}\n        {(dices ? dices : stats).map((el, index) => {\n          return (\n            <DiceIcon\n              {...el}\n              // diceMax={el.diceMax}\n              // value={el.value}\n              // icon={el.type}\n              key={`${name}|${el.type}|${index}`}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ItemList_list__u-OwR\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectLoading, selectEq, selectFilters } from \"redux/eq/selectors\";\nimport { Item } from \"components/Item/Item\";\nimport { updateItem } from \"redux/eq/operations\";\n\nimport css from \"./ItemList.module.css\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const ItemList = ({ filters }) => {\n  const extraFilters = useSelector(selectFilters);\n\n  const dispatch = useDispatch();\n  const items = useSelector(selectEq);\n\n  // useEffect(() => {\n  //   dispatch(refreshEq());\n  // }, [dispatch]);\n\n  const filterItems = (filters, items) => {\n    const filteredItems = items\n      ? Array.isArray(items)\n        ? [\n            ...items.filter((i) => {\n              return !filters.selected || i.selected === filters.selected;\n            }),\n          ]\n        : items\n      : items;\n    return filteredItems;\n  };\n\n  return (\n    <div className={css.list}>\n      {useSelector(selectLoading) ? (\n        <>\n          <br />\n          <Loader />\n        </>\n      ) : (\n        \"\"\n      )}\n\n      {/* <Item {...items.all[0]} /> */}\n      {/* filters || extraFilters */}\n      {items\n        ? Array.isArray(items)\n          ? filterItems(filters || extraFilters, items).map((el, index) => {\n              return (\n                <Item\n                  name={`${el.name}`}\n                  alt={`${el.alt}`}\n                  id={`${el.id}`}\n                  key={`${el.name}|${el.index}|${el.id}`}\n                  // key={`key|${index}`}\n                  index={index}\n                  selected={el.selected}\n                  skill={el.skill}\n                  statsTxT={el.statsTxT || \"\"}\n                  toggleSelect={() =>\n                    dispatch(\n                      updateItem({\n                        ...el,\n                        selected: !el.selected,\n                      })\n                    )\n                  }\n                  // stats={el ? (el.stats ? el.stats : el) : []}\n                  dices={el.dices}\n                  nondices={el.nondices}\n                  lv={el.lv}\n                />\n              );\n            })\n          : \"\"\n        : \"\"}\n    </div>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n//   deleteContactHandle: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"miniature\":\"Miniature_miniature__-XChZ\",\"extension\":\"Miniature_extension__JEJLA\",\"padding\":\"Miniature_padding__AvpVc\",\"textBoxContainer\":\"Miniature_textBoxContainer__VBOAB\",\"textBoxFront\":\"Miniature_textBoxFront__YIyfd\",\"textBoxBack\":\"Miniature_textBoxBack__b4yIz\",\"imgFrame\":\"Miniature_imgFrame__3V+X9\",\"figcaption\":\"Miniature_figcaption__PifSq\",\"img\":\"Miniature_img__7uR5g\"};","import { PropTypes } from \"prop-types\";\nimport css from \"./Miniature.module.css\";\n\nexport const Miniature = ({\n  // url,\n  // alt = \"😎\",\n  // title,\n  padding = false,\n  bgTxtFront = \"\",\n  bgTxtBack = \"\",\n  children,\n  bgColor = \"#d7ca92\",\n}) => {\n  return (\n    <figure className={`${css.miniature} ${children ? css.extended : \"\"}`}>\n      <div\n        className={`${css.imgFrame} ${padding ? css.padding : \"\"} `}\n        style={{ backgroundColor: `${bgColor}` }}\n      >\n        {/* {url && url !== \"\" ? (\n          <img className={css.img} src={url} alt={`\\n${alt}`} />\n        ) : ( */}\n        <div className={css.textBoxContainer}>\n          <div className={css.textBoxBack}>{bgTxtBack}</div>\n          <div className={css.textBoxFront}>{bgTxtFront}</div>\n        </div>\n        {/* )} */}\n      </div>\n      {children ? <div className={css.extension}> {children}</div> : \"\"}\n    </figure>\n  );\n};\nMiniature.propTypes = {\n  bgTxtFront: PropTypes.string,\n  bgTxtBack: PropTypes.string,\n  bgColor: PropTypes.string,\n  padding: PropTypes.bool,\n  // title: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SkillSquare_item__bxD12\",\"canFire\":\"SkillSquare_canFire__YwXx-\",\"skillButton\":\"SkillSquare_skillButton__6sBaz\",\"bar\":\"SkillSquare_bar__HFaeU\",\"text\":\"SkillSquare_text__k4BJE\",\"name\":\"SkillSquare_name__thDuJ\",\"iconBag\":\"SkillSquare_iconBag__c+K-+\",\"disabled\":\"SkillSquare_disabled__L5kRC\",\"spent\":\"SkillSquare_spent__cyghQ\"};","// import { PropTypes } from 'prop-types';\nimport { Miniature } from \"components/Miniature/Miniature\";\nimport { DiceIcon } from \"components/DiceIcon/DiceIcon\";\nimport css from \"./SkillSquare.module.css\";\nimport { useCombat } from \"hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Skill } from \"objects/Skill\";\n\nexport const SkillSquare = ({\n  name,\n  itemId,\n  icon,\n  alt,\n  tags = [\"\"],\n  // lv = 1,\n  // selected = false,\n  // toggleSelect,\n  // dices,\n  success = false,\n  currentUses = -1,\n  // stats = [],\n  skill = {\n    name: \"NO SKILL\",\n    txt: \"-\",\n    id: \"skill|id\",\n    displayCost: [],\n  },\n  // statsTxT,\n}) => {\n  const [toDispatch, editToDispatch] = useState([]);\n  const { inCombat, combat } = useCombat();\n  const dispatch = useDispatch();\n\n  const fireSkill = () => {\n    if (success && toDispatch.length === 0) {\n      // console.log(`--------FIRING SKILL - ADDING TO DISPATCH--------`);\n      editToDispatch([\n        ...toDispatch.concat(Skill.execute(itemId, { combat }, success)),\n      ]);\n      // editToDispatch((prevToDispatch) => [\n      //   ...prevToDispatch,\n      //   Skill.execute(skill.id, { combat }, success),\n      // ]);\n    }\n  };\n\n  useEffect(() => {\n    const runDispatch = async (toDispatch) => {\n      for (const dispatchFunc of toDispatch) {\n        if (dispatchFunc !== false) {\n          await dispatch(dispatchFunc());\n        }\n      }\n      editToDispatch([]);\n    };\n\n    if (toDispatch.length > 0) {\n      runDispatch(toDispatch);\n    }\n  }, [toDispatch, dispatch]);\n\n  return (\n    <div\n      className={`${css.item} ${\n        inCombat !== true || currentUses < 0\n          ? css.display\n          : success\n          ? css.canFire\n          : css.disabled\n      } ${inCombat === true && currentUses === 0 ? css.spent : \"\"}`}\n      id={itemId}\n    >\n      <Miniature url={icon} alt={alt || name} bgTxtBack={tags[0]} />\n      <div\n        key={`${name}btn${itemId}`}\n        className={`${css.skillButton} `}\n        onClick={fireSkill}\n      >\n        {alt}\n      </div>\n      <div className={css.bar}>\n        <div className={css.iconBag}>\n          {(skill.displayCost ? skill.displayCost : []).map((el, index) => {\n            return <DiceIcon {...el} key={`${name}|${el.type}|${index}`} />;\n          })}\n        </div>\n\n        <div className={css.text}>{skill.txt}</div>\n        <span className={css.name}>{skill.name}</span>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"stat\":\"StatIcon_stat__bvU0-\",\"icon\":\"StatIcon_icon__U+1Gf\",\"random\":\"StatIcon_random__mTIhc\",\"full\":\"StatIcon_full__5H3WC\",\"half\":\"StatIcon_half__AqZCZ\",\"empty\":\"StatIcon_empty__jxwgw\"};","import { getDiceTypeIcon } from \"data/icons\";\nimport css from \"./StatIcon.module.css\";\n\n// const getColor = ({ type, maxHp='' }) => {\n//   //   console.log(`getting color ${value} / ${diceMax}`);\n//   if (!value || value === -1) return css.random;\n//   const percentage = (100 * value) / diceMax;\n//   if (percentage > 90) return css.full;\n//   if (percentage > 49) return css.half;\n//   return css.empty;\n// };\n\nexport const StatIcon = ({ type, maxHp = \"\" }) => {\n  return (\n    <div\n      // className={`${css.dice} ${getColor({ value, diceMax })}`}\n      className={`${css.stat}`}\n      // data-text={`${diceMax}`}\n    >\n      {maxHp} <span className={css.icon}>{getDiceTypeIcon(type)}</span>\n    </div>\n  );\n};\n","import { getSkillEvalById } from \"data/eq\";\n// import { SKILL_EVALUATION } from \"../skillEvaluations\";\n// import { getSkillById } from \"../skills\";\n\nconst fetchSkillEvaluation = (id, state) => {\n  // returns array of functions\n  if (!id) return [];\n  const found = getSkillEvalById(id) || [];\n  // const found = SKILL_EVALUATION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((evaluation) => {\n      const collection = evaluation[0] || { false: () => false };\n      const evaId = evaluation.length > 0 ? evaluation[1] || false : false;\n      const params = evaluation.length > 1 ? evaluation[2] || {} : {};\n      const func = () => collection[evaId]({ params, state });\n      // console.log(\n      //   `Adding eval func collection[${evaId}](${params})`,\n      //   evaluation\n      // );\n      return func;\n    }),\n  ];\n  return sequence;\n};\n\nexport const fetchSkillEvaluations = ({ itemId, state }) => {\n  // returns false or array of functions to evaluate\n  // const { evaluationId } = getSkillById(skillId);\n  // const sequence = fetchSkillEvaluation(evaluationId, state);\n  const sequence = fetchSkillEvaluation(itemId, state);\n  if (sequence.length < 1) return false;\n  console.log(`Skill evaluations for:`, itemId, sequence);\n  return sequence;\n};\n","import { fetchSkillEvaluations } from \"data/skillEvaluation/skillEvaluation\";\nimport { fetchSkillExecution } from \"data/skillsExecution/skillExecution\";\nimport { deleteAllSelectedDices } from \"redux/combat/operations\";\nimport { useDungeonItemSkill } from \"redux/dungeon/operations\";\nconst getDiceFromId = (id, dices) => {\n  const found = dices.find((dice) => dice.id === id);\n  return found || {};\n};\n\nexport const Skill = {\n  usedDices(itemId, state) {\n    // returns false or array of dice ids\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    const dungeon = state.dungeon || false;\n    const items = dungeon ? dungeon.items || false : false;\n    const thisItem = items ? items.find((i) => i.itemId === itemId) : false;\n    const currentUses = thisItem ? thisItem.currentUses || 0 : 0;\n    if (currentUses < 1) return false;\n    const arrayToTest = fetchSkillEvaluations({\n      itemId,\n      state,\n    });\n    // let result;\n    if (!arrayToTest) {\n      console.log(`${itemId} had no evaluations to perform`);\n      return false;\n    }\n    const arr = [...arrayToTest];\n    // let txt = \"\";\n    let success = true;\n    let i = 0;\n    while (success && i < arr.length) {\n      const singleResult = arr[i]();\n      if (singleResult === undefined || singleResult === false) {\n        success = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (success !== true && success !== false) {\n            success = [...success, ...singleResult];\n          } else {\n            success = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) success = false;\n    // result = { success, txt: txt };\n    // if(success)console.log(txt);\n    return success;\n  },\n  execute(itemId, state, diceIdArr) {\n    // returns false or array of func to dispatch\n    // if false skill cannot be fired\n    // those dices will be used by skill\n    // !!!AAA!!! make fun that will pull dice from selected by the id\n    // console.log(`Skill.EXECUTE > diceIdArr`, diceIdArr);\n    const usedDices = [\n      ...diceIdArr.map((id) => {\n        return getDiceFromId(id, state.combat.rolledDices);\n      }),\n    ];\n    console.log(`Skill.EXECUTE > usedDices, diceIdArr`, usedDices, diceIdArr);\n    const arrayToExecute = fetchSkillExecution({\n      itemId,\n      state,\n      usedDices,\n    });\n    // let result;\n    if (!arrayToExecute) {\n      console.log(`${itemId} had no actions to execute`);\n      return false;\n    }\n    const arr = [...arrayToExecute];\n    // let txt = \"\";\n    let funcList = true;\n    // let funcList = [() => deleteAllSelectedDices()];\n    let i = 0;\n    // console.log(`----------Skill.execute [--------------------`);\n    while (funcList && i < arr.length) {\n      const singleResult = arr[i]();\n      // console.log(`------- while  executing func-----------`, arr[i]);\n      // console.log(\n      //   `------- while  singleResult.length[${singleResult.length}]-----------`,\n      //   singleResult\n      // );\n      if (singleResult === undefined || singleResult === false) {\n        funcList = false;\n      } else {\n        if (singleResult !== true) {\n          // txt += `<Test[${i}]> \\n${singleResult.join(\"\\n\")}\\n`;\n          if (funcList !== true && funcList !== false) {\n            funcList = [...funcList, ...singleResult];\n          } else {\n            funcList = [...singleResult];\n          }\n        }\n      }\n      i++;\n    }\n\n    // console.log(`----------] Skill.execute--------------------`);\n    // txt += `last iteration [${i - 1}] arr.length[${arr.length}]\\n`;\n    if (i !== arr.length) {\n      funcList = false;\n    } else {\n      if (funcList !== true && funcList !== false) {\n        funcList = [\n          ...funcList,\n          deleteAllSelectedDices,\n          () => useDungeonItemSkill(itemId),\n        ];\n      } else {\n        funcList = [deleteAllSelectedDices, () => useDungeonItemSkill(itemId)];\n      }\n    }\n    // result = { funcList, txt: txt };\n    // if(funcList)console.log(txt);\n    return funcList;\n  },\n};\n","// import { SKILL_EXECUTION } from \"data/skillExecutions\";\n// import { getSkillById } from \"../skills\";\nimport { getSkillExecById } from \"data/eq\";\n\nexport const fetchSkillExecution = ({ itemId, state, usedDices }) => {\n  // returns array of functions\n  // const id = getSkillById(skillId).actionId;\n  if (!itemId) return [];\n  const found = getSkillExecById(itemId) || [];\n  // const found = SKILL_EXECUTION[id] || [];\n  if (found.length === 0) return [];\n  const sequence = [\n    ...found.map((exec) => {\n      const collection = exec[0] || { false: () => false };\n      const exeId = exec.length > 0 ? exec[1] || false : false;\n      const params = exec.length > 1 ? exec[2] || {} : {};\n      const func = () => collection[exeId]({ params, state, usedDices });\n      //   console.log(\n      //     `Adding eval func collection[${evaId}](${params})`,\n      //     exec\n      //   );\n      return func;\n    }),\n  ];\n  if (sequence.length < 1) return false;\n  console.log(`data> skillExecs > SkillExecs for:`, itemId, sequence);\n  return sequence;\n};\n"],"names":["getFrame","value","type","style","undefined","css","DiceIcon","diceMax","className","getDiceTypeIcon","Item","name","id","icon","alt","tags","lv","selected","toggleSelect","dices","nondices","stats","skill","txt","Miniature","url","bgTxtFront","bgTxtBack","children","SkillSquare","onClick","map","el","index","StatIcon","key","ItemList","filters","extraFilters","useSelector","selectFilters","dispatch","useDispatch","items","selectEq","selectLoading","Loader","Array","isArray","filter","i","filterItems","statsTxT","updateItem","padding","bgColor","backgroundColor","itemId","success","currentUses","displayCost","useState","toDispatch","editToDispatch","useCombat","inCombat","combat","useEffect","runDispatch","dispatchFunc","length","concat","Skill","maxHp","fetchSkillEvaluations","sequence","state","found","getSkillEvalById","evaluation","collection","false","evaId","params","fetchSkillEvaluation","console","log","usedDices","dungeon","thisItem","find","arrayToTest","arr","singleResult","execute","diceIdArr","dice","getDiceFromId","rolledDices","arrayToExecute","getSkillExecById","exec","exeId","fetchSkillExecution","funcList","deleteAllSelectedDices","useDungeonItemSkill"],"sourceRoot":""}