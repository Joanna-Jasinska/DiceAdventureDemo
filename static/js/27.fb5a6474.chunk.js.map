{"version":3,"file":"static/js/27.fb5a6474.chunk.js","mappings":"0WAgBaA,EAAuB,WAClC,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA6CE,EAAAA,EAAAA,MAArCC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,UACvBC,EAASF,EAATE,KACAC,GAAcC,EAAAA,EAAAA,KAAdD,UACFE,GAAWC,EAAAA,EAAAA,MACXC,IAAkB,OAAIC,OAAOC,OAAOV,IAAgBW,MACxD,SAACC,GAAD,OAAmB,IAATA,CAAV,IAkDF,OA7CAC,EAAAA,EAAAA,YAAU,WAER,OADAC,QAAQC,IAAR,yCACO,kBAAMD,QAAQC,IAAR,sCAAN,CACR,GAAE,KAEHF,EAAAA,EAAAA,YAAU,WACR,GAAIhB,IAAaO,EAAY,GAAKD,EAAO,IAQvC,GAPIC,EAAY,GACdT,GAASqB,EAAAA,EAAAA,OAAeC,SAAQ,WAC9BtB,GAASuB,EAAAA,EAAAA,OAAgBD,SAAQ,WAEhC,GACF,IAECd,EAAO,IAAkB,IAAbN,EAAmB,CACjCiB,QAAQC,IAAR,oCAAyCZ,EAAzC,MACA,IAAMgB,EAAW,mCAAG,WAAOC,GAAP,qFACCA,GADD,+DACPC,EADO,iBAEV1B,EAAS0B,KAFC,qMAAH,sDAKjBF,EAAY,CACVH,EAAAA,GACA,WACEV,EAAS,WACV,GAEJ,OAGCE,IACFb,GAAS2B,EAAAA,EAAAA,OACT3B,GAAS4B,EAAAA,EAAAA,IAAgBrB,IACzBP,GAAS6B,EAAAA,EAAAA,OAEZ,GAAE,CACD7B,EACAE,EACAW,EACAJ,EACAD,EACAD,EACAI,KAIA,kBAAMmB,UAAS,UAAKC,EAAAA,EAAAA,MAApB,WAEE,SAAC,KAAD,CAAUC,GAAG,WACb,SAAC,IAAD,KACA,SAAC,IAAD,KACA,SAAC,IAAD,CAAOC,MAAM,wBAGlB,EAED,W","sources":["pages/ReturnFromCombatPage.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Title } from \"components/Title/Title\";\nimport {\n  getEnemyGold,\n  levelupAndReloadDungeon,\n} from \"redux/dungeon/operations\";\nimport { clearCombat } from \"redux/combat/operations\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { useCombat, useDungeon } from \"hooks\";\nimport { useEnemy } from \"hooks/useEnemy\";\nimport { LvUpDungeonById, playerLvUp } from \"redux/game/operations\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Background } from \"components/Background/Background\";\nimport css from \"./Page.module.css\";\n\nexport const ReturnFromCombatPage = () => {\n  const dispatch = useDispatch();\n  const { inCombat } = useCombat();\n  const { slotsDefeated, player, dungeonId } = useDungeon();\n  const { life } = player;\n  const { enemyLife } = useEnemy();\n  const navigate = useNavigate();\n  const dungeonVictory = ![...Object.values(slotsDefeated)].some(\n    (slot) => slot === false\n  );\n  // const error = useSelector(selectError);\n  // const loading = useSelector(selectLoading);\n\n  useEffect(() => {\n    console.log(` ReturnFromCombatPage rendering START`);\n    return () => console.log(` ReturnFromCombatPage rendering END`);\n  }, []);\n\n  useEffect(() => {\n    if (inCombat && (enemyLife < 1 || life < 1)) {\n      if (enemyLife < 1) {\n        dispatch(clearCombat()).finally(() => {\n          dispatch(getEnemyGold()).finally(() => {\n            //\n          });\n        });\n      }\n      if (life < 1 && inCombat === true) {\n        console.log(`Return page: player life [${life}]`);\n        const runDispatch = async (toDispatch) => {\n          for (const func of toDispatch) {\n            await dispatch(func());\n          }\n        };\n        runDispatch([\n          clearCombat,\n          () => {\n            navigate(\"/summary\");\n          },\n        ]);\n      }\n      return;\n    }\n    if (dungeonVictory) {\n      dispatch(playerLvUp());\n      dispatch(LvUpDungeonById(dungeonId));\n      dispatch(levelupAndReloadDungeon());\n    }\n  }, [\n    dispatch,\n    inCombat,\n    dungeonVictory,\n    enemyLife,\n    life,\n    dungeonId,\n    navigate,\n  ]);\n\n  return (\n    <main className={`${css.main}`}>\n      {/* {error ? <span className={css.error}>{error}</span> : \"\"} */}\n      <Navigate to=\"/town\" />\n      <Background />\n      <Loader />\n      <Title title=\"Picking up gold..\" />\n    </main>\n  );\n};\n\nexport default ReturnFromCombatPage;\n"],"names":["ReturnFromCombatPage","dispatch","useDispatch","inCombat","useCombat","useDungeon","slotsDefeated","player","dungeonId","life","enemyLife","useEnemy","navigate","useNavigate","dungeonVictory","Object","values","some","slot","useEffect","console","log","clearCombat","finally","getEnemyGold","runDispatch","toDispatch","func","playerLvUp","LvUpDungeonById","levelupAndReloadDungeon","className","css","to","title"],"sourceRoot":""}